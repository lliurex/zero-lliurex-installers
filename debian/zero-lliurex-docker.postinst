#!/bin/bash
# postinst script for zero-lliurex-docker.
#
# See: dh_installdeb(1).

set -e

# Summary of how this script can be called:
#        * <postinst> 'configure' <most-recently-configured-version>
#        * <old-postinst> 'abort-upgrade' <new version>
#        * <conflictor's-postinst> 'abort-remove' 'in-favour' <package>
#          <new-version>
#        * <postinst> 'abort-remove'
#        * <deconfigured's-postinst> 'abort-deconfigure' 'in-favour'
#          <failed-install-package> <version> 'removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package.
PERM_FILE="/usr/share/cdc-mapper/groups/docker.json"
DIR_FILE="/usr/share/cdc-mapper/groups"

case "$1" in
    configure)
            echo "Postinstall zero-lliurex-docker testing"
	if dpkg -s docker-ce &>/dev/null ; then
		echo "Adding permission group..."
		PERM_FILE="/usr/share/cdc-mapper/groups/docker.json"
		if [ ! -f  "$PERM_FILE" ]; then
			echo "Generating JSON permission file..."
			jq -n '{"name":"docker","editable":true,"alu":false,"doc":true,"adm":true}' > $PERM_FILE
		fi
	else
		if [ -f  "$PERM_FILE" ]; then
			echo "You don't have Docker installed deleting permission file..."
			rm $PERM_FILE
		fi
	fi
	    pam-auth-update --force --package zero-lliurex-docker || true
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
	echo "Postinstall zero-lliurex-docker testing"
	if dpkg -s docker-ce &>/dev/null ; then
		echo "Adding permission group_2..."
		if [ ! -f  "$PERM_FILE" ]; then
			echo "Generating JSON permission file..."
			jq -n '{"name":"docker","editable":true,"alu":false,"doc":true,"adm":true}' > $PERM_FILE
		fi
	else
		echo "Docker-ce is not installed"
		if [ -f  "$PERM_FILE" ]; then
			echo "You don't have Docker installed deleting permission file..."
			rm $PERM_FILE
		fi
	fi
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.



exit 0
