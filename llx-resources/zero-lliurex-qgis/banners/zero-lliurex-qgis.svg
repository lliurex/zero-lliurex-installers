<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="235"
   height="110"
   viewBox="0 0 62.177082 29.104167"
   version="1.1"
   id="svg900"
   inkscape:version="1.3 (1:1.3+202307231459+0e150ed6c4)"
   sodipodi:docname="zero-lliurex-qgis.svg"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview902"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:document-units="mm"
     showgrid="false"
     units="px"
     inkscape:zoom="2"
     inkscape:cx="109.5"
     inkscape:cy="134.25"
     inkscape:window-width="1918"
     inkscape:window-height="881"
     inkscape:window-x="0"
     inkscape:window-y="0"
     inkscape:window-maximized="1"
     inkscape:current-layer="g1055"
     inkscape:showpageshadow="2"
     inkscape:deskcolor="#d1d1d1" />
  <defs
     id="defs897">
    <linearGradient
       id="linearGradient4689">
      <stop
         style="stop-color:#5a9fd4;stop-opacity:1;"
         offset="0"
         id="stop4691" />
      <stop
         style="stop-color:#306998;stop-opacity:1;"
         offset="1"
         id="stop4693" />
    </linearGradient>
    <linearGradient
       id="linearGradient4671">
      <stop
         style="stop-color:#ffd43b;stop-opacity:1;"
         offset="0"
         id="stop4673" />
      <stop
         style="stop-color:#ffe873;stop-opacity:1"
         offset="1"
         id="stop4675" />
    </linearGradient>
    <clipPath
       id="SVGID_00000087383823137868174920000009179798724267602067_">
      <use
         xlink:href="#SVGID_1_"
         style="overflow:visible"
         id="use1" />
    </clipPath>
    <rect
       id="SVGID_1_"
       width="499.97601"
       height="499.97601"
       x="0"
       y="0" />
  </defs>
  <g
     inkscape:label="Capa 1"
     inkscape:groupmode="layer"
     id="layer1">
    <g
       id="g1055"
       transform="translate(-73.918747,-37.647919)">
      <g
         id="OBJECTS"
         transform="matrix(0.15125888,0,0,0.0808578,68.996931,32.260766)"
         style="opacity:1;fill:#000000">
        <g
           id="g119"
           style="opacity:0.48;fill:#000000"
           transform="translate(441.10089,-1.7671155)">
          <defs
             id="defs2">
            <rect
               id="rect2"
               width="499.97601"
               height="499.97601"
               x="0"
               y="0" />
          </defs>
          <clipPath
             id="clipPath2">
            <use
               xlink:href="#SVGID_1_"
               style="overflow:visible"
               id="use2" />
          </clipPath>
          <g
             clip-path="url(#SVGID_00000087383823137868174920000009179798724267602067_)"
             id="g118"
             style="opacity:0.46;fill:#000000"
             transform="translate(-435.54312,8.1878083)">
            <path
               style="fill:#000000"
               d="m 393.042,175.545 c 12.845,10.047 25.804,19.958 38.843,29.753 6.598,-7.831 13.197,-15.661 19.795,-23.492 4.486,-5.323 8.966,-10.656 13.431,-16.003 -11.334,-11.377 -23.45,-21.904 -35.81,-32.167 -12.33,13.746 -24.23,27.891 -36.259,41.909 z"
               id="path1" />
            <path
               style="fill:#000000"
               d="m 456.606,105.399 c -0.161,-0.072 -0.295,-0.194 -0.452,-0.274 -3.733,3.913 -7.466,7.827 -11.199,11.741 -4.49,4.707 -8.87,9.515 -13.214,14.357 12.36,10.263 24.476,20.79 35.81,32.167 9.83,-11.771 19.538,-23.647 28.874,-35.795 -11.69,-9.244 -22.894,-19.1 -33.419,-29.651 -2.284,2.394 -4.567,4.788 -6.851,7.182 0.156,0.079 0.289,0.201 0.451,0.273 z"
               id="path2" />
            <path
               style="fill:#000000"
               d="m 422.661,64.752 c -0.592,1.595 -1.268,3.162 -2.065,4.689 -0.354,0.678 -0.814,1.286 -1.204,1.941 9.728,10.699 20.597,20.36 32.43,28.672 0.742,0.521 1.518,0.994 2.323,1.407 2.284,-2.394 4.567,-4.788 6.851,-7.182 -0.187,-0.188 -0.388,-0.362 -0.575,-0.551 0.187,0.188 0.388,0.363 0.575,0.551 1.31,-1.373 2.62,-2.746 3.929,-4.119 3.153,-3.306 6.318,-6.626 8.956,-10.355 3.268,-4.619 5.531,-9.705 7.205,-15.025 -19.475,-0.07 -38.95,-0.069 -58.425,-0.028 z"
               id="path3" />
            <g
               id="g5"
               style="fill:#000000">
              <path
                 style="fill:#000000"
                 d="m 391.788,176.96 c -2.539,2.958 -5.064,5.929 -7.624,8.866 -10.932,12.545 -21.905,25.144 -30.945,39.115 -6.136,9.484 -11.243,19.325 -14.739,30.038 3.189,2.545 7.542,6.335 10.604,9.062 6.845,6.097 13.654,11.734 20.75,15.208 20.044,-23.787 40.754,-48.751 60.797,-72.537 -13.04,-9.794 -25.998,-19.706 -38.843,-29.752 z"
                 id="path4" />
              <path
                 style="fill:#000000"
                 d="m 434.314,209.396 c -20.043,23.786 -40.431,48.354 -60.475,72.141 21.328,9.879 25.392,12.009 35.512,15.497 12.047,4.152 15.137,5.453 39.865,9.727 v -86.174 c -5.005,-3.688 -9.936,-7.46 -14.902,-11.191 z"
                 id="path5" />
            </g>
            <path
               style="fill:#000000"
               d="m 205.874,284.706 c 0,0 33.425,23.765 37.149,25.857 8.093,-14.444 15.68,-27.46 24.725,-41.208 -11.957,-7.768 -24.09,-16.157 -36.312,-23.513 -0.82,1.561 -17.363,26.822 -25.562,38.864 z"
               id="path6" />
            <path
               style="fill:#000000"
               d="m 425.867,42.26 c 0.445,0.011 0.445,0.011 0,0 -0.374,5.679 -1.262,11.256 -3.206,16.498 19.475,-0.041 38.95,-0.042 58.425,0.028 3.86,-12.265 4.231,-25.914 4.018,-38.959 -0.002,-0.11 -0.007,-0.221 -0.009,-0.331 -19.755,1.138 -39.525,1.992 -59.306,2.5 0.032,0.865 0.064,1.73 0.096,2.595 0.215,5.84 0.368,11.807 -0.018,17.669 z"
               id="path7" />
            <path
               style="fill:#000000"
               d="m 389.123,174.265 c -7.223,-5.65 -17.622,-13.794 -24.81,-19.51 -4.064,-3.232 -4.999,-3.965 -8.945,-7.435 -8.274,10.856 -17.49,21.247 -25.81,32.067 -5.91,7.685 -12.95,16.462 -17.642,24.946 -4.536,8.204 -6.876,15.508 -10.996,23.925 11.224,7.685 22.713,15.623 34.611,24.107 3.496,-10.714 11.023,-25.13 17.159,-34.613 9.041,-13.971 33.894,-40.529 36.433,-43.487 z"
               id="path8" />
            <path
               style="fill:#000000"
               d="m 255.033,203.706 c -7.04,13.413 -13.471,25.666 -20.511,39.079 12.223,7.357 24.328,14.887 36.284,22.656 4.686,-7.123 9.689,-14.01 15.28,-20.458 4.387,-5.059 7.317,-10.08 10.26,-16.091 -12.596,-7.949 -40.302,-24.537 -41.313,-25.186 z"
               id="path9" />
            <path
               style="fill:#000000"
               d="m 326.247,177.584 c 8.32,-10.82 16.673,-21.617 24.947,-32.473 -10.825,-9.521 -21.34,-19.682 -32.233,-29.17 -0.604,0.541 -1.186,1.106 -1.828,1.606 -5.495,4.277 -12.73,7.206 -15.436,13.622 -0.946,2.242 -2.076,4.376 -3.286,6.465 0.455,0.351 0.927,0.679 1.381,1.032 -0.454,-0.353 -0.926,-0.681 -1.381,-1.032 -6.871,11.87 -17.375,21.627 -24.939,33.205 -4.338,6.64 -8.03,13.675 -11.716,20.697 -1.726,3.289 -3.245,6.182 -4.971,9.471 1.011,0.649 28.771,17.011 41.368,24.959 4.12,-8.416 7.021,-16.287 11.557,-24.49 4.693,-8.484 10.627,-16.207 16.537,-23.892 z"
               id="path10" />
            <path
               style="fill:#000000"
               d="m 241.575,23.783 c 3.947,-3.446 7.917,-6.866 11.791,-10.394 1.432,-1.304 2.894,-2.662 3.706,-4.42 1.558,-3.374 0.319,-7.476 -1.951,-10.418 -2.27,-2.942 -5.429,-5.039 -8.317,-7.377 -0.698,-0.565 -1.342,-1.193 -2.012,-1.791 -6.587,5.514 -13.196,10.997 -19.677,16.634 5.226,6.161 10.695,12.105 16.46,17.766 z"
               id="path11" />
            <path
               style="fill:#000000"
               d="m 217.703,43.779 c 7.843,-6.307 15.522,-12.811 23.104,-19.43 -5.764,-5.661 -11.234,-11.605 -16.461,-17.765 -7.09,6.166 -14.061,12.467 -21.022,18.778 0.448,0.577 0.931,1.125 1.374,1.706 4.282,5.613 8.358,11.397 13.005,16.711 z"
               id="path12" />
            <path
               style="fill:#000000"
               d="m 227.31,242.944 c -12.414,-7.472 -24.959,-14.752 -37.62,-21.883 -7.084,10.184 -13.976,20.478 -20.18,31.147 -2.223,3.822 -3.04,5.076 -5.353,8.843 12.941,7.317 26.094,14.632 39.092,21.968 8.199,-12.041 14.855,-22.534 21.603,-35.391 0.82,-1.561 1.639,-3.123 2.458,-4.684 z"
               id="path13" />
            <path
               style="fill:#000000"
               d="m 216.691,44.684 c -4.646,-5.314 -8.723,-11.097 -13.005,-16.711 -0.443,-0.581 -0.926,-1.129 -1.374,-1.706 -2.843,2.577 -5.763,5.066 -8.584,7.668 -7.763,7.159 -15.561,14.554 -20.796,23.726 -4.07,7.132 -7.125,13.725 -11.159,20.877 -0.667,1.182 -1.349,2.331 -2.018,3.508 13.329,8.159 26.659,16.317 39.988,24.476 0.229,-0.235 0.429,-0.495 0.663,-0.725 6.15,-6.037 13.795,-10.28 20.684,-15.457 1.726,-1.297 3.422,-2.683 5.028,-4.165 -0.128,-0.072 -0.252,-0.15 -0.38,-0.221 0.128,0.071 0.252,0.15 0.38,0.221 4.806,-4.433 12.888,-20.002 13.665,-22.338 -7.973,-4.886 -16.537,-11.708 -22.735,-18.712 -0.126,-0.141 -0.233,-0.298 -0.357,-0.441"
               id="path14" />
            <g
               id="g16"
               style="fill:#000000">
              <path
                 style="fill:#000000"
                 d="m 159.111,82.798 c -7.549,13.287 -15.9,25.472 -23.739,38.388 6.45,3.983 12.917,7.961 19.338,11.985 7.309,-11.228 17.335,-26.304 24.865,-37.847 -7.104,-4.348 -13.359,-8.177 -20.464,-12.526 z"
                 id="path15" />
              <path
                 style="fill:#000000"
                 d="m 180.454,95.891 c -7.53,11.544 -17.536,26.588 -24.845,37.816 6.018,3.773 11.925,7.705 17.855,11.614 4.402,-7.025 8.632,-13.774 13.034,-20.799 3.786,-6.041 7.65,-12.112 12.63,-17.201 -6.224,-3.81 -12.449,-7.619 -18.674,-11.43 z"
                 id="path16" />
            </g>
            <path
               style="fill:#000000"
               d="m 134.48,120.331 c 7.84,-12.915 16.233,-24.766 23.782,-38.053 -13.499,-8.263 -28.194,-16.665 -41.694,-24.927 -4.724,12.43 -10.826,23.825 -19.834,33.493 -1.288,1.382 -2.008,2.355 -3.226,3.789 4.516,2.853 9.071,5.993 13.554,8.898 9.041,5.859 18.258,11.145 27.418,16.8 z"
               id="path17" />
            <path
               style="fill:#000000"
               d="m 284.38,55.306 c 5.052,-11.66 9.27,-23.723 15.712,-34.666 1.598,-2.714 3.315,-5.372 4.894,-8.097 -4.651,-2.156 -9.089,-4.823 -13.19,-7.838 -3.223,-2.369 -6.617,-5.226 -9.456,-8.034 -7.184,13.259 -15.785,25.758 -23.627,38.634 0.264,0.23 0.506,0.486 0.771,0.715 -0.266,-0.229 -0.507,-0.485 -0.771,-0.715 -4.041,6.634 -7.743,13.419 -10.679,20.557 12.114,-0.214 24.23,-0.384 36.346,-0.556 z"
               id="path18" />
            <path
               style="fill:#000000"
               d="m 219.054,45.053 c 6.198,7.004 13.47,13.037 21.443,17.924 0.716,-2.151 1.509,-4.266 2.367,-6.351 -3.691,0.065 -7.382,0.101 -11.073,0.17 3.691,-0.069 7.382,-0.105 11.073,-0.17 2.936,-7.137 6.638,-13.922 10.679,-20.557 -4.029,-3.504 -7.934,-7.147 -11.743,-10.888 -7.582,6.619 -15.261,13.123 -23.104,19.43 0.124,0.143 0.232,0.3 0.358,0.442 z"
               id="path19" />
            <path
               style="fill:#000000"
               d="m 355.105,55.54 c 1.267,-2.364 2.42,-4.786 3.342,-7.317 1.288,-3.538 2.12,-7.201 2.754,-10.911 -0.255,-0.007 -0.511,-0.013 -0.766,-0.02 0.255,0.007 0.511,0.013 0.766,0.02 0.771,-4.51 1.233,-9.092 1.644,-13.651 0.139,-1.54 0.273,-3.084 0.405,-4.629 -10.43,-0.032 -20.86,-0.037 -31.287,-0.245 -3.843,-0.076 -7.632,-0.698 -11.344,-1.67 -2.138,12.809 -3.388,25.764 -3.755,38.745 12.746,-0.147 25.494,-0.222 38.241,-0.322 z"
               id="path20" />
            <path
               style="fill:#000000"
               d="m 288.125,55.862 c 8.966,-0.127 17.93,-0.285 26.896,-0.389 0.367,-12.981 1.618,-25.936 3.755,-38.745 -3.435,-0.9 -6.794,-2.123 -10.045,-3.629 -1.579,2.725 -3.296,5.383 -4.894,8.097 -6.442,10.943 -10.66,23.006 -15.712,34.666 z"
               id="path21" />
            <path
               style="fill:#000000"
               d="m 364.046,37.384 c 18.609,0.48 37.218,0.959 55.827,1.438 0.386,-5.861 0.233,-11.829 0.018,-17.67 -0.032,-0.865 -0.064,-1.73 -0.096,-2.595 -17.897,0.459 -35.797,0.601 -53.7,0.545 -0.132,1.545 -0.266,3.089 -0.405,4.629 -0.411,4.561 -0.873,9.143 -1.644,13.653 z"
               id="path22" />
            <path
               style="fill:#000000"
               d="m 209.82,-11.888 c -7.541,6.06 -14.975,12.25 -22.29,18.582 5.134,5.747 10.119,11.617 14.844,17.704 6.961,-6.311 13.932,-12.612 21.022,-18.778 -4.782,-5.636 -9.28,-11.495 -13.576,-17.508 z"
               id="path23" />
            <path
               style="fill:#000000"
               d="m 259.522,107.703 c 12.021,7.674 23.728,15.834 35.019,24.548 1.209,-2.089 2.34,-4.223 3.286,-6.465 2.706,-6.416 9.941,-9.345 15.436,-13.622 0.642,-0.5 1.224,-1.065 1.828,-1.606 C 302.853,99.9 290.109,90.146 275.902,83.119 c -5.158,8.371 -10.923,16.397 -16.38,24.584 z"
               id="path24-3" />
            <path
               style="fill:#000000"
               d="M 387.663,100.797 C 376.15,91.294 364.832,81.576 354.11,71.206 c -2.839,4.54 -6.058,8.878 -9.298,13.145 -1.607,2.116 -3.213,4.233 -4.82,6.349 0.086,0.045 0.168,0.098 0.254,0.143 -0.086,-0.045 -0.168,-0.097 -0.254,-0.143 -3.404,4.484 -6.809,8.969 -10.213,13.453 -2.903,3.824 -5.884,7.645 -9.446,10.84 10.893,9.487 21.408,19.649 32.233,29.17 3.042,-3.991 6.111,-7.961 9.109,-11.983 8.12,-10.895 16.801,-21.37 25.988,-31.383 z"
               id="path25-6" />
            <path
               style="fill:#000000"
               d="m 365.922,134.167 c -2.998,4.023 -6.067,7.993 -9.109,11.983 3.946,3.47 7.931,6.858 11.995,10.09 7.188,5.716 14.444,11.312 21.668,16.962 12.029,-14.018 23.928,-28.163 36.258,-41.909 -11.537,-9.579 -23.255,-18.961 -34.824,-28.51 -9.186,10.013 -17.868,20.489 -25.988,31.384 z"
               id="path26" />
            <path
               style="fill:#000000"
               d="m 388.914,99.049 c 3.185,-3.471 6.426,-6.891 9.732,-10.248 5.355,-5.437 10.862,-10.891 14.753,-17.42 -0.565,-0.621 -0.565,-0.621 0,0 0.39,-0.654 0.85,-1.262 1.204,-1.941 0.796,-1.527 1.473,-3.094 2.065,-4.689 -19.573,0.041 -39.144,0.138 -58.716,0.291 -0.805,1.502 -1.684,2.965 -2.59,4.415 10.721,10.371 22.039,20.089 33.552,29.592 z"
               id="path27" />
            <path
               style="fill:#000000"
               d="m 244.72,133.819 c -6.844,15.608 -15.142,29.461 -24.634,43.665 10.575,6.786 21.03,13.606 31.605,20.393 1.726,-3.289 3.091,-5.889 4.817,-9.178 3.686,-7.022 7.379,-14.057 11.716,-20.697 7.564,-11.578 18.068,-21.335 24.939,-33.205 -11.29,-8.713 -22.998,-16.874 -35.019,-24.548 -5.034,7.556 -9.781,15.263 -13.424,23.57 z"
               id="path28" />
            <path
               style="fill:#000000"
               d="m 393.042,101.039 c 11.568,9.548 23.287,18.931 34.824,28.51 4.344,-4.842 8.724,-9.65 13.214,-14.357 3.733,-3.914 7.466,-7.827 11.199,-11.741 -0.806,-0.413 -1.581,-0.886 -2.323,-1.407 -11.833,-8.312 -22.702,-17.974 -32.43,-28.672 -3.89,6.528 -9.398,11.982 -14.753,17.42 -3.304,3.356 -6.546,6.776 -9.731,10.247 z"
               id="path29" />
            <path
               style="fill:#000000"
               d="M 63.042,78.988 C 55.949,74.747 48.625,70.594 40.907,67.641 34.832,65.317 28.483,63.612 22,63.094 17.711,62.751 10.503,62.58 4.578,62.641 c -9.271,0.095 -18.737,0.08 -28.008,0.175 -0.743,3.116 -1.336,6.268 -1.616,9.471 -0.532,6.092 -0.911,12.198 -1.498,18.274 17.369,2.149 33.731,10.731 48.563,20.382 13.924,9.061 26.554,18.637 41.281,26.163 C 71.358,122.591 78.825,108.237 89.492,95.67 80.375,89.542 72.439,84.606 63.042,78.988 Z"
               id="path30" />
            <path
               style="fill:#000000"
               d="m 191.564,218.186 c 12.66,7.131 25.206,14.411 37.62,21.883 7.04,-13.413 13.585,-26.093 20.625,-39.506 -10.575,-6.786 -21.108,-13.631 -31.684,-20.417 -8.72,13.049 -17.573,25.119 -26.561,38.04 z"
               id="path31" />
            <path
               style="fill:#000000"
               d="m 108.456,161.384 c 0.765,-1.22 1.531,-2.44 2.296,-3.661 7.267,-11.585 14.373,-23.066 21.371,-34.597 -9.159,-5.656 -18.311,-11.327 -27.351,-17.186 -4.483,-2.905 -9.009,-5.743 -13.525,-8.596 -10.667,12.567 -18.38,26.077 -26.438,40.592 3.59,1.835 6.331,3.7 10.108,5.161 11.711,4.532 23.016,11.417 33.539,18.287 z"
               id="path32" />
            <path
               style="fill:#000000"
               d="m 419.873,42.26 c -18.609,-0.48 -37.218,-0.959 -55.827,-1.438 -0.634,3.71 -1.466,7.373 -2.754,10.911 -0.922,2.531 -2.074,4.952 -3.342,7.317 19.572,-0.153 39.144,-0.25 58.716,-0.291 1.945,-5.244 2.833,-10.82 3.207,-16.499 z"
               id="path33" />
            <path
               style="fill:#000000"
               d="m 205.516,169.078 c 3.284,2.107 6.803,3.664 10.086,5.771 9.492,-14.204 17.876,-28.185 24.72,-43.794 3.643,-8.307 8.389,-16.014 13.424,-23.569 -7.965,-5.084 -16.037,-9.999 -24.288,-14.604 -1.606,1.481 -3.302,2.868 -5.028,4.165 -6.889,5.177 -14.535,9.42 -20.684,15.457 -0.234,0.23 -0.434,0.491 -0.663,0.725 0.112,0.068 0.224,0.137 0.336,0.206 -0.112,-0.068 -0.224,-0.137 -0.336,-0.206 -4.979,5.089 -8.844,11.161 -12.63,17.201 -4.402,7.025 -7.315,11.673 -11.717,18.698 5.055,3.871 10.631,9.32 16.058,13.186 3.619,2.578 6.982,4.364 10.722,6.764 z"
               id="path34" />
            <path
               style="fill:#000000"
               d="m 146.44,187.71 c 8.364,-13.348 16.729,-26.697 25.094,-40.044 -5.93,-3.909 -11.909,-7.742 -17.927,-11.515 -8.373,12.863 -16.746,25.726 -25.119,38.588 5.983,4.316 11.941,8.691 17.952,12.971 z"
               id="path35" />
            <path
               style="fill:#000000"
               d="m 126.772,175.484 c -5.887,-4.247 -11.811,-8.415 -17.848,-12.356 -9.18,14.637 -18.361,29.273 -27.541,43.909 6.771,2.071 13.302,4.852 19.421,8.339 8.656,-13.297 17.312,-26.594 25.968,-39.892 z"
               id="path36" />
            <path
               style="fill:#000000"
               d="m 152.951,135.776 c -6.421,-4.025 -12.849,-8.042 -19.299,-12.025 -6.999,11.531 -14.105,23.011 -21.371,34.597 -0.765,1.22 -1.531,2.44 -2.296,3.661 6.037,3.941 11.961,8.109 17.848,12.356 8.372,-12.864 16.745,-25.726 25.118,-38.589 z"
               id="path37" />
            <path
               style="fill:#000000"
               d="m 140.35,197.749 c 1.784,-2.847 3.568,-5.694 5.352,-8.541 -6.011,-4.28 -11.969,-8.654 -17.952,-12.971 -8.656,13.297 -17.312,26.595 -25.968,39.892 6.153,3.507 11.893,7.72 17.036,12.647 1.362,1.305 2.774,2.541 4.186,3.777 3.744,-7.621 7.527,-15.162 11.639,-22.311 2.334,-4.06 3.22,-8.525 5.707,-12.493 z"
               id="path38" />
            <path
               style="fill:#000000"
               d="m 178.964,210.72 c 2.766,1.538 5.509,3.105 8.264,4.657 8.988,-12.922 17.988,-25.209 26.708,-38.258 -3.284,-2.107 -7.48,-4.105 -10.764,-6.212 -3.74,-2.4 -5.816,-3.299 -9.436,-5.877 -5.428,-3.866 -11.18,-9.709 -16.736,-13.373 -8.364,13.348 -17.447,27.763 -25.812,41.111 9.021,6.422 18.173,12.612 27.776,17.952 z"
               id="path39" />
            <path
               style="fill:#000000"
               d="m 272.55,80.41 c -3.669,-1.815 -8.057,-3.812 -11.941,-5.225 -5.929,-2.157 -11.618,-4.946 -16.997,-8.243 -0.777,2.336 -1.486,4.703 -2.069,7.128 -1.509,6.28 -5.499,11.564 -10.305,15.998 8.251,4.605 16.324,9.52 24.288,14.604 5.457,-8.188 11.866,-15.892 17.024,-24.262 z"
               id="path40" />
            <path
               style="fill:#000000"
               d="m 301.727,65.365 v 0 c 0.005,-0.189 0.003,-0.094 0,0 z"
               id="path41" />
            <path
               style="fill:#000000"
               d="m 287.17,58.786 c -1.526,3.521 -3.33,9.016 -5.094,12.421 -1.706,3.291 -3.144,6.935 -5.09,10.091 14.207,7.027 26.951,17.704 39.189,28.362 3.562,-3.195 6.543,-7.016 9.446,-10.84 3.404,-4.484 6.961,-8.749 9.717,-13.716 -11.664,-6.131 -25.247,-17.401 -35.186,-26.054 -10e-4,-10e-4 -7.623,-0.264 -12.982,-0.264 z"
               id="path42" />
            <path
               style="fill:#000000"
               d="m 315.599,59.108 c -0.005,0.188 -0.002,0.094 0,0 -4.05,0.047 -8.761,-0.161 -12.81,-0.1 9.939,8.653 22.679,17.556 34.344,23.687 1.607,-2.116 3.213,-4.232 4.82,-6.349 3.24,-4.267 6.459,-8.605 9.298,-13.145 -0.244,-0.236 -0.366,-0.354 -0.366,-0.354 0,0 0.122,0.118 0.366,0.354 0.907,-1.45 1.786,-2.914 2.59,-4.415 -12.747,0.099 -25.495,0.175 -38.242,0.322 z"
               id="path43" />
            <path
               style="fill:#000000"
               d="m 301.728,65.365 v 0 c -0.003,0.094 -0.006,0.189 0,0 z"
               id="path44" />
            <path
               style="fill:#000000"
               d="m 273.243,79.518 c 1.945,-3.157 3.756,-7.075 5.462,-10.366 1.764,-3.404 2.561,-6.845 4.087,-10.366 -12.115,0.172 -24.231,0.342 -36.346,0.556 -0.858,2.085 -1.651,4.2 -2.367,6.351 5.379,3.297 11.068,6.086 16.997,8.243 3.884,1.413 8.498,3.767 12.167,5.582 z"
               id="path45" />
            <path
               style="fill:#000000"
               d="m 185.008,218.093 c -2.755,-1.551 -5.498,-3.119 -8.264,-4.657 -9.603,-5.34 -18.754,-11.53 -27.775,-17.953 -1.784,2.847 -3.568,5.694 -5.352,8.541 -2.487,3.968 -3.373,8.434 -5.707,12.493 -4.111,7.149 -6.717,12.299 -10.46,19.92 9.673,8.464 20.818,15.283 32.038,21.627 2.314,-3.767 3.119,-5.002 5.342,-8.824 6.202,-10.669 13.094,-20.963 20.178,-31.147 z"
               id="path46" />
            <path
               style="fill:#000000"
               d="m 102.52,218.584 c -0.042,0.065 -0.085,0.131 -0.127,0.196 0.042,-0.066 0.085,-0.131 0.127,-0.196 -6.119,-3.487 -12.65,-6.268 -19.421,-8.339 -1.406,2.241 -2.811,4.483 -4.217,6.724 -14.343,22.867 -28.685,45.733 -43.028,68.599 10.807,7.758 22.122,16.108 32.928,23.866 2.05,-1.362 3.591,-3.317 5.641,-4.68 23.835,-15.842 36.326,-43.301 49.319,-69.747 -1.412,-1.236 -2.824,-2.472 -4.186,-3.777 -5.143,-4.927 -10.883,-9.14 -17.036,-12.646 z"
               id="path47" />
            <g
               id="g54"
               style="fill:#000000">
              <path
                 style="fill:#000000"
                 d="m 209.356,-12.354 c -1.895,-2.653 -4.395,-5.33 -6.191,-8.051 h -42.424 c 7.799,8.096 18.248,18.215 25.736,26.597 7.315,-6.332 15.337,-12.486 22.879,-18.546 z"
                 id="path48" />
              <g
                 id="g53"
                 style="fill:#000000">
                <g
                   id="g50"
                   style="fill:#000000">
                  <path
                     style="fill:#000000"
                     d="m 119.836,-20.228 12.873,12.347 c 0.644,-4.048 1.425,-8.214 1.889,-12.347 z"
                     id="path49" />
                  <path
                     style="fill:#000000"
                     d="m 159.312,-20.228 h -23.84 c -0.464,4.133 -1.275,9.028 -1.919,13.076 l 31.151,31.151 c 7.996,-6.966 15.357,-13.314 20.344,-17.63 -7.488,-8.382 -17.937,-18.501 -25.736,-26.597 z"
                     id="path50" />
                </g>
                <g
                   id="g52"
                   style="fill:#000000">
                  <path
                     style="fill:#000000"
                     d="m 133.327,-5.734 c -2.35,14.775 -5.966,29.353 -10.201,43.714 -1.856,6.293 -3.895,12.603 -6.24,18.775 2.814,1.722 4.782,2.927 7.596,4.649 9.856,-9.533 26.825,-25.533 39.451,-36.532 z"
                     id="path51" />
                  <path
                     style="fill:#000000"
                     d="m 186.394,7.82 c -4.987,4.316 -12.348,10.664 -20.344,17.63 l 0.227,0.227 -0.227,-0.227 c -12.626,10.999 -30.153,27.234 -40.009,36.766 10.685,6.54 21.955,12.546 32.64,19.086 0.669,-1.177 1.351,-2.326 2.018,-3.508 4.034,-7.152 7.089,-13.746 11.159,-20.877 5.235,-9.172 13.033,-16.567 20.796,-23.726 2.821,-2.601 5.741,-5.091 8.584,-7.668 -4.725,-6.086 -9.711,-11.957 -14.844,-17.703 z"
                     id="path52" />
                </g>
              </g>
            </g>
            <g
               id="g55"
               style="fill:#000000">
              <path
                 style="fill:#000000"
                 d="m 204.179,-20.405 c 1.796,2.721 4.181,4.981 6.076,7.633 2.769,-2.225 6.655,-5.445 9.454,-7.633 z"
                 id="path54" />
              <path
                 style="fill:#000000"
                 d="m 235.662,-20.405 h -15.228 c -2.799,2.188 -7.158,5.789 -9.927,8.015 4.296,6.013 8.794,11.872 13.576,17.507 6.481,-5.637 13.091,-11.12 19.677,-16.634 -3,-2.674 -5.724,-5.645 -8.098,-8.888 z"
                 id="path55" />
            </g>
            <path
               style="fill:#000000"
               d="m -28.774,92.113 c -2.715,-0.336 -5.45,-0.532 -8.212,-0.53 v 33.614 c 2.635,-5.304 4.541,-11.013 5.811,-16.798 1.181,-5.375 1.873,-10.819 2.401,-16.286 z"
               id="path56" />
            <path
               style="fill:#000000"
               d="m 245.519,-11.516 c 3.538,-2.962 7.041,-5.963 10.609,-8.888 h -18.706 c 2.373,3.242 5.098,6.213 8.097,8.888 z"
               id="path57" />
            <g
               id="g69"
               style="fill:#000000">
              <path
                 style="fill:#000000"
                 d="m 16.004,-8.423 c 0.14,2.027 0.365,4.525 0.629,7.175 -0.211,-2.397 -0.467,-4.817 -0.629,-7.175 z"
                 id="path58" />
              <path
                 style="fill:#000000"
                 d="M 118.619,-20.228 H 72.17 c -9.459,6.392 -23.866,13.455 -34.007,17.51 -15.565,6.222 -30.26,15.121 -41.711,27.363 -9.255,9.894 -16.221,22.096 -19.351,35.222 9.271,-0.095 18.542,-0.19 27.814,-0.286 5.925,-0.061 11.866,-0.121 17.758,0.514 6.466,0.697 12.92,2.061 18.994,4.385 7.718,2.953 16.696,7.356 23.789,11.597 9.397,5.618 17.237,10.857 26.493,16.704 1.217,-1.434 1.946,-2.416 3.234,-3.799 9.008,-9.668 15.074,-21.488 19.798,-33.918 -0.215,-0.132 -0.431,-0.264 -0.647,-0.396 0.215,0.132 0.431,0.264 0.647,0.396 2.345,-6.171 4.384,-12.482 6.24,-18.775 4.236,-14.361 8.746,-28.402 11.096,-43.178 z"
                 id="path59" />
              <g
                 id="g68"
                 style="fill:#000000">
                <path
                   style="fill:#000000"
                   d="m 16.004,-8.423 c 0.14,2.027 0.365,4.525 0.629,7.175 -0.211,-2.397 -0.467,-4.817 -0.629,-7.175 z"
                   id="path60" />
                <path
                   style="fill:#000000"
                   d="m 16.632,-1.248 c 0.615,7.004 1.367,14.077 2.385,20.906 0,0 -1.446,-11.471 -2.385,-20.906 z"
                   id="path61" />
                <g
                   id="g67"
                   style="fill:#000000">
                  <path
                     style="fill:#000000"
                     d="m 16.004,-8.423 c 0.14,2.027 0.365,4.525 0.629,7.175 -0.211,-2.397 -0.467,-4.817 -0.629,-7.175 z"
                     id="path62" />
                  <path
                     style="fill:#000000"
                     d="m 19.206,19.633 c 0.004,-0.003 0.009,-0.005 0.013,-0.008 -0.663,-4.801 -1.916,-14.136 -2.586,-20.874 0.529,6.034 1.625,14.308 2.573,20.882 z"
                     id="path63" />
                  <path
                     style="fill:#000000"
                     d="m 19.658,22.764 c 0,0 -0.174,-1.217 -0.439,-3.139 -0.004,0.003 -0.008,0.005 -0.013,0.008 0.152,1.058 0.311,2.185 0.452,3.131 z"
                     id="path64" />
                  <g
                     id="g66"
                     style="fill:#000000">
                    <path
                       style="fill:#000000"
                       d="m -36.986,60.101 c 3.775,-0.039 8.701,0.039 12.475,0 2.959,-12.408 8.223,-22.932 16.731,-32.52 C -16.777,22.213 -29.083,12.48 -36.987,5.132 v 54.969 z"
                       id="path65" />
                    <path
                       style="fill:#000000"
                       d="M 14.779,8.072 C 13.832,1.498 12.497,-7.02 11.967,-13.054 c -0.263,-2.649 -0.489,-5.148 -0.629,-7.175 H -36.986 V 3.864 c 7.903,7.348 20.685,17.621 29.681,22.989 C -6.564,25.689 7.156,12.811 14.779,8.072 Z"
                       id="path66" />
                  </g>
                  <path
                     style="fill:#000000"
                     d="m 70.328,-20.228 h -58.07 c 0.162,2.357 0.418,4.778 0.629,7.175 0.67,6.738 1.923,16.073 2.586,20.874 6.616,-4.113 13.617,-7.649 20.848,-10.539 10.141,-4.055 24.548,-11.119 34.007,-17.51 z"
                     id="path67" />
                </g>
              </g>
            </g>
            <path
               style="fill:#000000"
               d="m -27.276,71.965 c 0.28,-3.204 0.873,-6.356 1.616,-9.471 -3.775,0.039 -7.55,0.078 -11.325,0.116 v 27.1 c 2.762,-0.002 5.497,0.194 8.212,0.53 0.585,-6.076 0.964,-12.183 1.497,-18.275 z"
               id="path69" />
            <path
               style="fill:#000000"
               d="m 292.057,3.165 c 4.101,3.015 8.539,5.682 13.19,7.838 1.245,-2.149 2.412,-4.336 3.314,-6.65 1.753,-4.492 2.458,-9.266 2.674,-14.096 -0.188,-0.013 -0.376,-0.013 -0.563,-0.027 0.188,0.014 0.376,0.014 0.563,0.027 0.159,-3.552 0.082,-7.132 -0.184,-10.667 H 290.28 c -2.008,5.43 -4.481,10.634 -7.227,15.704 2.839,2.807 5.781,5.502 9.004,7.871 z"
               id="path70" />
            <path
               style="fill:#000000"
               d="m 248.15,-8.885 c 2.888,2.338 6.046,4.435 8.317,7.377 2.27,2.942 3.509,7.044 1.951,10.418 -0.812,1.758 -2.274,3.116 -3.706,4.42 -3.874,3.528 -8.444,7.574 -12.391,11.02 3.809,3.741 7.818,7.461 11.847,10.965 7.841,-12.875 17.391,-25.917 24.575,-39.176 -4.946,-4.892 -9.907,-11.09 -14.244,-16.544 l -7.122,-0.006 c -3.558,3.03 -7.701,6.773 -11.239,9.735 0.671,0.598 1.314,1.226 2.012,1.791 z"
               id="path71" />
            <path
               style="fill:#000000"
               d="m 366.095,16.547 c 17.902,0.056 35.803,-0.086 53.7,-0.545 -0.448,-12.137 -0.896,-24.275 -1.343,-36.412 h -52.53 c 1.942,12.136 1.231,24.615 0.173,36.957 z"
               id="path72" />
            <path
               style="fill:#000000"
               d="m 279.448,-4.707 c 2.747,-5.07 5.219,-10.274 7.227,-15.704 h -21.03 c 4.337,5.454 8.857,10.812 13.803,15.704 z"
               id="path73" />
            <g
               id="g75"
               style="fill:#000000">
              <path
                 style="fill:#000000"
                 d="m 363.929,-8.999 c -0.16,-3.823 -0.445,-7.634 -1.048,-11.406 h -46.697 c 0.266,3.535 0.343,7.115 0.184,10.667 15.059,1.072 32.276,1.127 47.561,0.739 z"
                 id="path74" />
              <path
                 style="fill:#000000"
                 d="m 316.184,-7.829 c -0.216,4.83 -0.737,7.696 -2.49,12.188 -0.903,2.314 -2.07,4.501 -3.314,6.65 3.25,1.506 6.61,2.729 10.045,3.629 0.034,-0.207 0.059,-0.415 0.094,-0.621 -0.035,0.206 -0.059,0.414 -0.094,0.621 3.712,0.972 7.501,1.594 11.344,1.67 10.427,0.208 20.857,0.212 31.287,0.245 0.729,-8.506 1.303,-14.872 0.947,-23.352 -15.286,0.388 -32.76,0.041 -47.819,-1.03 z"
                 id="path75" />
            </g>
            <path
               style="fill:#000000"
               d="m 170.302,446.111 c 6.246,-44.788 53.428,-98.649 58.658,-111.024 -7.846,-0.045 -31.64,-0.104 -39.49,0.017 -10.741,0.166 -18.816,0.331 -29.557,0.497 -6.373,10.043 -12.412,20.201 -14.415,31.841 -8.627,50.149 -3.189,101.529 0.499,152.344 h 25.972 c -4.151,-9.74 -4.993,-49.824 -1.667,-73.675 z"
               id="path76" />
            <path
               style="fill:#000000"
               d="m 144.258,368.162 c 2.002,-11.639 8.435,-22.517 14.808,-32.561 -16.033,0.247 -31.638,0.46 -47.67,0.707 -2.849,9.368 -2.147,19.679 -1.611,29.511 2.785,51.143 2.925,102.702 0.437,153.967 h 33.903 c -3.69,-50.816 -8.495,-101.475 0.133,-151.624 z"
               id="path77" />
            <path
               style="fill:#000000"
               d="m 325.716,471.335 h 2.003 c 0.442,-10.998 0.416,-21.982 -0.755,-32.94 -1.823,-17.061 -3.582,-34.128 -5.279,-51.202 -1.362,-13.708 -2.638,-27.459 -2.477,-41.229 h -54.93 c -11.459,0.474 -22.919,0.416 -34.381,0.351 -10.319,16.423 -20.806,32.753 -31.176,49.132 -3.917,6.187 -7.853,12.408 -10.717,19.147 -2.404,5.655 -4.94,13.418 -6.326,19.405 -2.564,11.07 -5.305,25.349 -5.242,36.712 0.09,16.108 0.126,27.386 7.396,48.575 l 140.466,0.5 c 1.008,-19.911 2.621,-28.585 3.42,-48.451 z"
               id="path78" />
            <path
               style="fill:#000000"
               d="M 540.89,477.329 H 330.856 c -0.799,19.865 -1.864,22.546 -2.872,42.457 H 540.89 Z"
               id="path79" />
            <path
               style="fill:#000000"
               d="m 1.164,447.858 c 0.404,-24.382 5.4,-48.478 5.241,-72.862 -0.051,-7.857 -0.102,-15.715 -0.154,-23.572 -13.275,8.549 -26.818,16.655 -41.101,23.338 V 520.209 H 0.185 c 1.593,-24.051 0.579,-48.232 0.979,-72.351 z"
               id="path80" />
            <g
               id="g84"
               style="fill:#000000">
              <path
                 style="fill:#000000"
                 d="m 5.621,314.193 c -5.226,-0.066 -33.638,1.107 -40.47,1.98 v 56.949 C -20.567,366.439 -7.024,358.333 6.252,349.784 6.207,342.955 6.163,336.126 6.118,329.297 6.085,324.257 5.943,319.218 5.621,314.193 Z"
                 id="path81" />
              <path
                 style="fill:#000000"
                 d="m -0.002,263.449 c 0.149,-2.633 0.422,-5.256 1.022,-7.847 4.013,-17.318 11.988,-33.085 21.318,-48.237 -21.246,5.588 -40.915,17.031 -57.188,31.937 v 24.079 c 7.331,-1.44 28.124,-2.164 34.848,0.068 z"
                 id="path82" />
              <path
                 style="fill:#000000"
                 d="m -0.002,264.87 c -6.724,-2.232 -27.517,-1.507 -34.847,-0.068 v 24.868 c 11.002,-1.903 25.586,-3.677 36.593,-3.973 -1.238,-6.986 -2.132,-13.963 -1.746,-20.827 z"
                 id="path83" />
              <path
                 style="fill:#000000"
                 d="m 5.163,306.837 c -0.802,-6.58 -2.234,-13.26 -3.418,-19.94 -11.008,0.297 -25.591,2.07 -36.593,3.973 v 24.177 c 6.833,-0.872 35.244,-2.045 40.47,-1.98 -0.134,-2.077 -0.207,-4.16 -0.459,-6.23 z"
                 id="path84" />
            </g>
            <path
               style="fill:#000000"
               d="M 45.424,170.072 C 52.097,160.261 56.747,149.252 62.522,138.85 47.795,131.324 35.497,121.743 21.573,112.682 6.74,103.031 -9.622,94.449 -26.991,92.3 c -0.528,5.468 -1.22,10.911 -2.401,16.286 -1.271,5.785 -4.959,15.64 -7.595,20.943 v 15.266 c 7.233,-1.435 16.265,-2.559 23.544,-3.739 3.464,-0.562 7.451,-0.953 10.067,1.385 1.653,1.477 2.358,3.761 2.557,5.969 0.564,6.252 -2.631,12.698 -7.949,16.033 -2.31,1.449 -4.925,2.323 -7.483,3.268 -6.561,2.426 -12.894,5.449 -18.952,8.947 v 60.488 c 16.273,-14.906 35.942,-26.349 57.188,-31.937 7.363,-11.955 15.55,-23.538 23.439,-35.137 z"
               id="path85" />
            <path
               style="fill:#000000"
               d="m -11.342,164.813 c 5.159,-3.009 8.259,-8.824 7.711,-14.463 -0.193,-1.992 -0.877,-4.052 -2.481,-5.385 -2.538,-2.109 -6.406,-1.756 -9.766,-1.25 -7.061,1.064 -14.093,2.283 -21.109,3.578 v 28.539 c 5.877,-3.155 12.021,-5.882 18.385,-8.071 2.483,-0.853 5.019,-1.641 7.26,-2.948 z"
               id="path86" />
            <g
               id="g88"
               style="fill:#000000">
              <path
                 style="fill:#000000"
                 d="m 2.714,519.786 h 104.042 c 0.867,-17.857 1.32,-32.64 1.7,-50.563 L 3.567,465.34 c 0.011,19.115 0.408,35.399 -0.853,54.446 z"
                 id="path87" />
              <path
                 style="fill:#000000"
                 d="m 109.148,336.342 c -17.978,0.277 -35.955,0.555 -53.933,0.832 -7.016,0.108 -14.382,0.097 -20.56,-3.197 -2.672,1.776 -5.344,3.552 -8.017,5.328 -5.922,3.935 -11.873,7.841 -17.858,11.695 0.051,7.857 0.102,15.715 0.154,23.572 0.159,24.384 -4.837,48.481 -5.241,72.862 -0.083,5.018 -0.084,10.039 -0.081,15.061 l 104.951,3.595 c 0.712,-33.532 0.536,-67.102 -1.279,-100.43 -0.536,-9.831 -0.985,-19.95 1.864,-29.318 z"
                 id="path88" />
            </g>
            <g
               id="g89"
               transform="translate(0,3.2865852)"
               style="fill:#000000">
              <polygon
                 style="fill:#000000"
                 points="373.839,367.629 391.317,367.629 448.312,367.629 448.312,350.459 373.839,347.899 "
                 id="polygon88" />
              <path
                 style="fill:#000000"
                 d="m 444.397,422.322 v 10.526 H 372.941 V 385.86 347.899 l -49.477,-1.935 c -0.162,13.77 1.129,29.456 2.491,43.164 1.697,17.074 3.456,34.142 5.279,51.202 1.171,10.958 1.197,21.942 0.755,32.94 h 210.587 v -50.948 h -67.24 z"
                 id="path89" />
              <polygon
                 style="fill:#000000"
                 points="531.852,381.491 474.675,381.491 474.675,412.475 474.675,417.953 531.852,417.953 "
                 id="polygon89" />
              <rect
                 x="508.59"
                 y="350.45901"
                 style="fill:#000000"
                 width="23.261"
                 height="28.471001"
                 id="rect89" />
            </g>
            <path
               style="fill:#000000"
               d="m 485.095,13.501 c -0.19,-11.311 -0.623,-22.618 -1.276,-33.912 h -59.373 c 0.448,12.137 0.895,24.275 1.343,36.412 19.781,-0.508 39.551,-1.362 59.306,-2.5 z"
               id="path90" />
            <g
               id="g92"
               style="fill:#000000">
              <path
                 style="fill:#000000"
                 d="m 118.409,321.024 c -2.361,3.982 -4.714,8.002 -6.313,12.347 -0.271,0.735 -0.474,1.486 -0.701,2.231 16.033,-0.247 32.066,-0.494 48.099,-0.741 1.4,-2.207 2.818,-4.4 4.241,-6.57 2.458,-3.751 4.025,-6.206 6.567,-9.913 -12.198,-6.628 -24.723,-15.115 -35.026,-24.337 -6.08,9.41 -11.155,17.349 -16.867,26.983 z"
                 id="path91" />
              <path
                 style="fill:#000000"
                 d="m 157.66,258.802 c -6.971,11.35 -14.188,22.551 -21.419,33.744 10.303,9.222 22.817,17.941 35.015,24.569 8.509,-12.408 16.864,-23.902 25.341,-36.35 -12.998,-7.336 -25.996,-14.647 -38.937,-21.963 z"
                 id="path92" />
            </g>
            <path
               style="fill:#000000"
               d="m 241.852,312.877 c -3.724,-2.092 -35.784,-26.657 -44.756,-31.721 -11.008,16.167 -22.166,31.209 -32.853,47.513 -1.422,2.17 -2.544,3.897 -3.945,6.104 10.741,-0.165 61.392,-0.842 69.238,-0.797 2.646,-4.209 8.915,-15.03 12.316,-21.099 z"
               id="path93" />
            <path
               style="fill:#000000"
               d="M 449.215,310.282 C 434.312,309 373.255,295.597 346.051,266.219 c -2.786,-3.009 -5.871,-5.595 -9.06,-8.14 -1.654,5.069 -2.701,9.434 -3.482,14.721 -3.392,22.947 -9.508,47.788 -10.045,70.978 l 125.188,4.121 z"
               id="path94" />
            <polygon
               style="fill:#000000"
               points="473.961,381.491 452.882,381.491 452.882,417.953 473.961,417.953 473.961,412.475 "
               id="polygon94" />
            <polygon
               style="fill:#000000"
               points="448.312,417.609 448.312,369.814 391.317,369.814 373.839,369.814 373.839,427.849 438.417,427.662 438.527,417.568 "
               id="polygon95" />
            <path
               style="fill:#000000"
               d="m 14.462,312.431 c 5.195,-2.183 8.505,-7.233 11.499,-12.006 2.888,-4.605 4.733,-9.959 7.621,-14.564 -1.838,-1.319 -2.632,-1.889 -4.47,-3.209 -7.267,-5.216 -14.601,-10.471 -22.788,-14.076 -1.636,-0.72 -3.32,-1.347 -5.026,-1.913 -0.386,6.864 0.507,13.841 1.746,20.827 0.622,-0.017 1.243,-0.06 1.865,-0.071 -0.622,0.012 -1.243,0.055 -1.865,0.071 1.185,6.679 2.617,13.36 3.418,19.94 0.252,2.069 0.325,4.153 0.458,6.232 2.593,0.033 5.131,-0.218 7.542,-1.231 z"
               id="path95" />
            <g
               id="g97"
               style="fill:#000000">
              <path
                 style="fill:#000000"
                 d="m 81.788,208.072 c -13.48,-4.122 -27.906,-5.434 -41.917,-3.876 -5.528,0.615 -10.956,1.76 -16.314,3.169 -2.077,3.373 -4.072,6.783 -5.986,10.228 10.45,6.453 21.563,14.391 30.907,22.276 2.238,1.889 6.766,4.535 9.98,5.399 6.371,-10.157 12.742,-20.315 19.113,-30.472 1.405,-2.242 2.811,-4.483 4.217,-6.724 z"
                 id="path96" />
              <path
                 style="fill:#000000"
                 d="m 17.297,219.372 c -6.575,12.028 -12.015,24.546 -15.084,38.01 -0.591,2.591 -0.859,5.214 -1.006,7.847 1.678,0.566 3.335,1.193 4.944,1.913 8.054,3.604 15.269,8.859 22.418,14.076 1.808,1.319 3.616,2.638 5.424,3.958 7.842,-12.709 15.685,-25.418 23.527,-38.127 -3.162,-0.864 -7.617,-3.511 -9.818,-5.399 -9.191,-7.888 -20.124,-15.825 -30.405,-22.278 z"
                 id="path97" />
            </g>
            <g
               id="g99"
               style="fill:#000000">
              <path
                 style="fill:#000000"
                 d="m 34.335,286.352 c -3.226,5.553 -4.81,10.403 -7.698,15.008 -2.328,3.711 -4.597,7.24 -8.044,9.808 3.533,8.029 7.742,17.022 15.341,21.227 0.095,0.052 0.202,0.07 0.297,0.121 2.787,-1.852 5.574,-3.705 8.361,-5.557 8.419,-5.596 16.839,-11.192 25.258,-16.788 -10.806,-7.758 -22.708,-16.062 -33.515,-23.819 z"
                 id="path98" />
              <path
                 style="fill:#000000"
                 d="m 17.786,311.491 c -3.936,2.327 -8.266,2.833 -10.858,2.8 0.322,5.025 0.464,10.064 0.497,15.103 0.045,6.829 0.089,13.658 0.134,20.487 5.984,-3.854 11.936,-7.76 17.858,-11.696 2.672,-1.776 5.344,-3.552 8.017,-5.328 -0.095,-0.051 -0.203,-0.069 -0.297,-0.121 -7.602,-4.205 -11.819,-13.216 -15.351,-21.245 z"
                 id="path99" />
            </g>
            <path
               style="fill:#000000"
               d="m 117.361,320.616 c 5.711,-9.634 11.752,-19.067 17.831,-28.478 v 0 0 c 7.231,-11.193 14.448,-22.394 21.419,-33.744 -11.221,-6.344 -21.997,-13.281 -31.67,-21.745 -12.993,26.446 -25.484,53.905 -49.319,69.747 -2.05,1.362 -4.099,2.725 -6.149,4.087 0.172,0.123 0.344,0.247 0.515,0.37 -0.172,-0.123 -0.344,-0.247 -0.515,-0.37 -8.419,5.596 -16.839,11.192 -25.258,16.788 -2.787,1.852 -5.574,3.705 -8.361,5.557 6.178,3.294 13.544,3.305 20.56,3.197 17.978,-0.277 35.955,-0.554 53.933,-0.832 0.227,-0.745 0.43,-1.496 0.701,-2.231 1.599,-4.344 3.952,-8.365 6.313,-12.346 z"
               id="path100" />
            <g
               id="g104"
               style="fill:#000000">
              <path
                 style="fill:#000000"
                 d="m 275.494,332.889 c -2.044,-2.788 -5.101,-4.626 -8.074,-6.39 -7.008,-4.157 -13.391,-7.005 -20.515,-11.007 -3.401,6.069 -15.776,28.362 -15.776,28.362 11.462,0.065 45.981,-0.029 45.981,-0.029 0.669,-4.192 0.301,-8.321 -1.616,-10.936 z"
                 id="path101" />
              <g
                 id="g103"
                 style="fill:#000000">
                <path
                   style="fill:#000000"
                   d="m 248.317,313.51 c 7.124,4.002 14.617,7.468 21.625,11.625 2.973,1.764 6.03,3.602 8.074,6.39 1.917,2.615 2.109,8.06 1.44,12.253 h 39.748 c 0.008,-0.71 -0.026,-1.419 -0.009,-2.13 0.282,-12.185 2.111,-24.34 4.268,-36.463 -16.029,-11.756 -33.637,-23.773 -50.198,-34.532 -9.044,13.748 -16.854,28.414 -24.948,42.857 z"
                   id="path102" />
                <path
                   style="fill:#000000"
                   d="m 334.314,255.114 c -7.902,-5.114 -23.893,-17.223 -34.375,-24.336 -2.943,6.012 -6.242,11.783 -10.629,16.842 -5.591,6.447 -10.594,13.335 -15.28,20.458 16.561,10.76 34.169,22.776 50.198,34.532 1.948,-10.949 4.77,-21.975 6.38,-32.865 0.781,-5.287 2.051,-9.562 3.706,-14.631 z"
                   id="path103" />
              </g>
            </g>
            <path
               style="fill:#000000"
               d="m 491.098,19.827 c 0.214,13.045 -0.158,26.694 -4.018,38.959 5.029,0.018 10.058,0.056 15.088,0.081 -0.06,-0.088 -0.138,-0.163 -0.197,-0.251 0.059,0.089 0.137,0.163 0.197,0.251 7.897,0.04 21.787,-0.139 29.683,-0.081 V 17.24 c -11.581,0.884 -29.168,1.588 -40.763,2.255 0.003,0.111 0.008,0.221 0.01,0.332 z"
               id="path104" />
            <path
               style="fill:#000000"
               d="M 531.852,84.414 V 64.988 c -7.897,-0.058 -15.793,-0.087 -23.689,-0.127 5.812,8.608 14.154,15.434 23.689,19.553 z"
               id="path105" />
            <path
               style="fill:#000000"
               d="m 502.168,64.861 c -5.03,-0.025 -10.059,-0.063 -15.088,-0.081 -1.674,5.32 -3.937,10.405 -7.205,15.025 -2.638,3.729 -5.804,7.049 -8.956,10.355 -1.31,1.373 -2.62,2.746 -3.929,4.119 10.525,10.552 21.729,20.407 33.419,29.651 8.91,-11.593 17.472,-23.438 25.448,-35.696 V 84.413 C 516.323,80.295 507.981,73.469 502.168,64.861 Z"
               id="path106" />
            <path
               style="fill:#000000"
               d="M 531.852,11.246 V -20.41 h -42.039 c 0.653,11.294 1.087,22.601 1.276,33.912 11.595,-0.668 29.182,-1.372 40.763,-2.256 z"
               id="path107" />
            <g
               id="g109"
               style="fill:#000000">
              <path
                 style="fill:#000000"
                 d="m 476.842,163.354 c 0.118,0.119 0.244,0.229 0.362,0.348 -0.118,-0.12 -0.243,-0.23 -0.362,-0.348 -4.465,5.347 -8.945,10.68 -13.431,16.003 -6.598,7.831 -13.197,15.661 -19.795,23.492 4.966,3.731 9.897,7.503 14.901,11.192 v -0.275 0.275 c 1.703,1.255 3.363,2.558 5.07,3.808 5.932,4.342 12.052,8.705 19.104,10.783 5.648,1.664 11.621,1.777 17.509,1.877 10.321,0.176 20.643,0.352 30.964,0.527 v -84.86 c -8.396,-5.613 -17.527,-12.354 -25.448,-18.617 -9.335,12.147 -19.044,24.023 -28.874,35.795 z"
                 id="path108" />
              <path
                 style="fill:#000000"
                 d="m 506.403,123.93 c 7.921,6.264 17.053,13.005 25.448,18.617 V 88.234 c -7.975,12.258 -16.538,24.103 -25.448,35.696 z"
                 id="path109" />
            </g>
            <path
               style="fill:#000000"
               d="m 492.5,323.75 c -21,-3.5 -26.5,-9.625 -39.25,-13 l -0.368,37.149 h 31.878 47.091 v -23.663 c -11.385,2.211 -27.844,1.432 -39.351,-0.486 z"
               id="path110" />
            <path
               style="fill:#000000"
               d="M 80.49,205.913 C 89.67,191.277 98.563,177.1 107.743,162.463 97.22,155.593 86.63,148.97 74.919,144.439 c -3.777,-1.462 -7.424,-3.185 -11.014,-5.02 -5.775,10.401 -10.508,21.226 -17.181,31.037 -7.889,11.6 -15.432,22.363 -22.794,34.32 5.358,-1.409 9.115,-2.124 14.643,-2.739 14.011,-1.558 28.437,-0.246 41.917,3.876 z"
               id="path111" />
            <rect
               x="452.88199"
               y="350.45901"
               style="fill:#000000"
               width="53.791"
               height="28.471001"
               id="rect111" />
            <g
               id="g113"
               style="fill:#000000">
              <path
                 style="fill:#000000"
                 d="m 494.894,238.868 c -5.888,-0.1 -11.86,-0.213 -17.509,-1.877 -7.051,-2.078 -13.172,-6.441 -19.104,-10.783 -1.708,-1.25 -3.368,-2.553 -5.07,-3.808 v 85.283 c 13.226,1.692 12.226,6.317 34.013,11.424 3.05,0.715 9.888,2.343 13.011,2.75 -0.249,-14.683 -0.987,-68.276 -1.235,-82.919 -1.369,-0.024 -2.738,-0.047 -4.106,-0.07 z"
                 id="path112" />
              <path
                 style="fill:#000000"
                 d="m 504.994,238.938 c 0.248,14.643 1.09,68.317 1.34,82.999 8.957,0.519 17.174,0.367 25.518,-1.487 v -81.055 c -8.953,-0.152 -17.906,-0.305 -26.858,-0.457 z"
                 id="path113" />
            </g>
            <path
               style="fill:#000000;stroke:#b6d9f7;stroke-width:2;stroke-miterlimit:10"
               d="m 177.861,150.237 c 5.118,4.001 12.045,10.326 16.463,13.476 5.345,3.81 22.965,13.657 22.965,13.657 l 36.458,23.623 46.539,28.347 c 0,0 28.647,19.999 34.835,24.822 8.983,7.001 22.186,21.601 37.894,29.148 31.103,14.945 47.173,20.878 79.673,25.628 13.57,1.983 14.836,9.509 50.355,14.893 12.98,1.968 37.518,-2.666 37.518,-2.666"
               id="path114" />
            <path
               style="fill:#000000;stroke:#b6d9f7;stroke-width:2;stroke-miterlimit:10"
               d="m -37.375,60.625 c 21.868,1.761 52.063,-1.198 68.957,2.504 19.007,4.165 50.757,25.446 58.597,30.999 18.893,13.382 60.659,37.285 82.326,52.221"
               id="path115" />
            <g
               id="g116"
               style="fill:#000000">
              <path
                 style="fill:#000000"
                 d="M 421.34,-23.158"
                 id="path116" />
            </g>
            <g
               id="g117"
               style="fill:#000000">
              <path
                 style="fill:#000000"
                 d="m 174.858,523.876 c -1.37,-11.105 -2.772,-22.145 -3.959,-33.274 -0.291,-2.784 -0.571,-5.568 -0.772,-8.38 -0.217,-2.792 -0.369,-5.664 -0.298,-8.559 0.127,-5.761 0.928,-11.318 1.758,-16.871 0.848,-5.547 1.891,-11.047 3.049,-16.525 1.168,-5.477 2.48,-10.919 4.065,-16.323 0.773,-2.7 1.657,-5.402 2.74,-8.092 1.112,-2.628 2.298,-5.198 3.573,-7.703 2.533,-5.024 5.272,-9.903 8.097,-14.725 5.686,-9.617 11.629,-19.067 18.119,-28.181 6.33,-9.033 12.172,-18.496 17.923,-27.983 5.738,-9.504 11.33,-19.104 16.796,-28.771 2.74,-4.816 5.363,-9.73 8.203,-14.544 2.815,-4.813 5.707,-9.573 8.649,-14.301 2.944,-4.727 5.941,-9.421 9.013,-14.07 3.086,-4.647 6.193,-9.253 9.582,-13.746 1.76,-2.236 3.618,-4.292 5.428,-6.399 1.796,-2.106 3.645,-4.181 5.108,-6.427 2.958,-4.6 5.462,-9.58 7.872,-14.555 1.184,-2.503 2.326,-5.027 3.405,-7.573 l 1.569,-3.855 c 0.538,-1.303 1.117,-2.582 1.72,-3.849 2.429,-5.054 5.206,-9.919 8.297,-14.592 3.13,-4.661 6.485,-9.087 9.82,-13.548 3.352,-4.443 6.733,-8.86 10.137,-13.26 3.355,-4.439 6.968,-8.698 10.47,-13 l 10.575,-12.894 5.288,-6.447 5.098,-6.583 10.279,-13.151 c 3.456,-4.364 6.919,-8.718 10.509,-13.002 3.609,-4.333 7.525,-8.294 11.325,-12.348 3.811,-4.032 7.654,-8.079 11.297,-12.182 1.662,-1.978 3.15,-4.33 4.52,-6.662 0.68,-1.178 1.329,-2.374 1.922,-3.581 0.586,-1.2 1.142,-2.445 1.483,-3.591 l 2.962,0.845 c -0.468,1.516 -1.079,2.806 -1.719,4.098 -0.644,1.282 -1.333,2.525 -2.054,3.748 -1.47,2.44 -2.972,4.805 -4.906,7.073 -3.777,4.179 -7.629,8.162 -11.491,12.177 -3.838,4.023 -7.782,7.946 -11.327,12.132 -3.589,4.207 -7.087,8.526 -10.572,12.849 -3.481,4.327 -6.935,8.68 -10.372,13.046 l -5.167,6.563 -5.341,6.407 -10.682,12.814 c -3.552,4.293 -7.169,8.486 -10.556,12.893 -3.435,4.368 -6.847,8.753 -10.228,13.16 -3.358,4.417 -6.759,8.831 -9.863,13.38 -3.041,4.602 -5.787,9.419 -8.172,14.388 -0.592,1.244 -1.159,2.498 -1.681,3.765 l -1.573,3.87 c -1.09,2.574 -2.238,5.117 -3.43,7.64 -2.394,5.045 -4.844,10.051 -7.858,14.837 -1.558,2.43 -3.41,4.534 -5.197,6.671 -1.794,2.125 -3.645,4.217 -5.304,6.367 -3.262,4.419 -6.328,9.07 -9.341,13.719 -3.007,4.662 -5.943,9.373 -8.826,14.116 -2.881,4.744 -5.711,9.52 -8.457,14.335 -2.759,4.794 -5.32,9.721 -8.025,14.6 -5.374,9.751 -10.871,19.43 -16.523,29.027 -5.672,9.588 -11.414,19.129 -17.747,28.381 -6.313,9.072 -12.119,18.531 -17.645,28.115 -2.743,4.801 -5.396,9.654 -7.816,14.586 -1.221,2.462 -2.336,4.956 -3.364,7.46 -0.957,2.483 -1.808,5.068 -2.559,7.715 -2.979,10.573 -5.379,21.417 -7.062,32.301 -0.817,5.436 -1.43,10.939 -1.473,16.303 -0.012,2.665 0.259,5.348 0.565,8.088 0.297,2.725 0.675,5.463 1.064,8.197 0.763,5.474 1.741,10.932 2.723,16.387 0.487,2.729 1.008,5.453 1.561,8.17 0.544,2.717 1.095,5.443 1.694,8.136 z"
                 id="path117" />
            </g>
          </g>
        </g>
        <path
           style="fill:#000000;stroke:#b6d9f7;stroke-width:3;stroke-miterlimit:10"
           d="m 442.61851,505.5464 c 0,0 1.688,30.312 0.875,40.375 -0.374,4.625 -3.375,18.25 -3.375,18.25"
           id="path119" />
      </g>
      <g
         id="g2"
         transform="matrix(0.31090671,0,0,0.31090671,79.812887,52.625942)">
        <path
           style="fill:#f2e964;fill-opacity:1;stroke-width:0.264583"
           d="M 41.949222,11.371372 V 8.2281902 Z M 36.689305,9.2971122 34.032889,6.6404382 V 3.6243152 0.60819029 l 3.143249,5.29e-4 3.14325,5.29e-4 2.54,2.51592791 2.54,2.515928 -3.01598,0.0024 -3.01598,0.0024 -0.01085,3.153963 -0.01085,3.1539638 z"
           id="path188-5"
           sodipodi:nodetypes="cccccccccccccccc" />
        <path
           style="fill:#87ab26;fill-opacity:1;stroke-width:0.264583"
           d="M 41.813877,14.535881 36.638691,9.3605681 v -3.143187 -3.143183 h 3.041615 3.041619 l 5.403881,5.340447 5.403885,5.3404509 v 2.978049 2.978052 h -3.270314 -3.270316 z m 36.459647,3.962281 C 74.884058,18.228557 72.397482,17.578428 69.72219,16.26237 55.00986,9.0249231 54.676239,-11.793864 69.151021,-19.380267 c 7.22085,-3.784531 16.352673,-3.507544 23.711649,0.719219 1.264734,0.726424 3.436233,2.287053 3.391897,2.437715 -0.01606,0.05459 -5.006938,6.3858641 -5.033907,6.3858641 -0.01289,0 -0.235685,-0.1779821 -0.495115,-0.3955151 -11.34125,-9.50972 -27.062752,-0.318495 -22.182515,12.9685151 2.708179,7.3733339 11.089571,9.9837239 19.191993,5.977355 l 0.402167,-0.198855 0.01074,-5.23875 0.01074,-5.23875 h 3.894516 3.8945 v 7.660865 7.6608619 l -0.455083,0.31695 c -4.580026,3.189829 -11.916504,5.244729 -17.219079,4.822954 z M 134.76735,18.39747 c -6.00957,-0.33804 -12.31404,-2.75935 -16.3118,-6.264746 -0.026,-0.02275 3.47618,-7.2847359 3.54852,-7.3581469 0.008,-0.0078 0.21076,0.152905 0.45135,0.357044 7.43274,6.3066749 18.88143,7.6065459 19.59757,2.225088 0.34982,-2.628725 -1.43928,-3.997595 -7.45497,-5.703922 -5.57727,-1.58197303 -7.43637,-2.29765503 -9.40342,-3.619965 -5.9597,-4.006279 -5.89115,-12.9063541 0.13242,-17.1926461 5.62065,-3.999582 15.77484,-4.003649 23.75413,-0.0095 0.94986,0.475464 2.31638,1.263755 2.32129,1.339058 0.002,0.02658 -3.41983,7.40387 -3.44794,7.434178 -0.007,0.0071 -0.2665,-0.132363 -0.57763,-0.309867 -8.80712,-5.024646 -17.89842,-4.943604 -16.86626,0.150347 0.4209,2.0771851 2.02891,3.0052991 8.46891,4.8880711 8.68885,2.540235 11.90019,5.18967797 12.57122,10.371579 1.09761,8.4761359 -6.03782,14.2978849 -16.78339,13.6934389 z M 31.029524,18.349916 C 6.0648669,17.569768 2.6266356,-16.856338 27.007858,-21.917981 c 15.643007,-3.247552 29.002296,8.799147 26.222594,23.6461511 -0.381669,2.038574 -1.850977,6.065869 -2.262209,6.200587 -0.02344,0.0077 -1.504537,-1.448422 -3.291334,-3.23578 l -3.248721,-3.249742 0.04256,-0.147601 C 47.456506,-9.0580939 36.858549,-18.469537 26.965524,-14.249764 15.690437,-9.4404879 16.707115,7.2896341 28.483727,10.733314 c 1.262655,0.369223 2.136399,0.488569 3.582964,0.489402 1.142211,5.29e-4 1.41207,-0.02188 2.38362,-0.199091 l 0.499788,-0.09116 2.890602,2.87595 c 3.381399,3.364261 3.018242,2.889178 2.38574,3.121019 -2.917614,1.069438 -5.864654,1.524614 -9.196917,1.420482 z M 103.82169,-1.8153019 V -21.775469 h 4.5085 4.5085 V -1.8153019 18.144864 h -4.5085 -4.5085 z m -72.442916,5.958422 -2.656416,-2.656674 v -3.016123 -3.016125 l 3.143249,5.29e-4 3.14325,5.29e-4 2.54,2.515928 2.54,2.51592797 -3.01598,0.0024 -3.01598,0.0024 -0.01085,3.15396303 -0.01085,3.153965 z"
           id="path188" />
        <path
           style="fill:#ee7913;fill-opacity:1;stroke-width:0.264583"
           d="m 36.723293,6.2936379 v -3.143183 z m -5.25992,-2.074261 -2.656416,-2.656674 v -3.016123 -3.016125 l 3.143249,5.29e-4 3.143247,5.29e-4 2.54,2.515928 2.54,2.51592799 -3.01598,0.0024 -3.01598,0.0024 -0.0108,3.15396301 -0.0109,3.153965 z"
           id="path188-7"
           sodipodi:nodetypes="cccccccccccccccc"
           inkscape:transform-center-x="-13.096972"
           inkscape:transform-center-y="13.096767" />
      </g>
    </g>
    <script
       id="mesh_polyfill"
       type="text/javascript">&#10;!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();&#10;</script>
  </g>
  <script
     id="script1169"
     type="text/javascript">&#10;!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();&#10;</script>
</svg>
