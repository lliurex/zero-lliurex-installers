<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="235"
   height="110"
   viewBox="0 0 62.177082 29.104167"
   version="1.1"
   id="svg900"
   inkscape:version="1.3 (1:1.3+202307231459+0e150ed6c4)"
   sodipodi:docname="zero-lliurex-geogebra.svg"
   xml:space="preserve"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><sodipodi:namedview
     id="namedview902"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:document-units="mm"
     showgrid="false"
     units="px"
     inkscape:zoom="2.3518519"
     inkscape:cx="136.91339"
     inkscape:cy="65.055118"
     inkscape:window-width="1920"
     inkscape:window-height="882"
     inkscape:window-x="0"
     inkscape:window-y="0"
     inkscape:window-maximized="1"
     inkscape:current-layer="g1"
     inkscape:showpageshadow="2"
     inkscape:deskcolor="#d1d1d1"
     showguides="false" /><defs
     id="defs897"><clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath25"><rect
         style="fill:#ff0000;stroke:none;stroke-width:3;stroke-linecap:square;stroke-linejoin:miter;paint-order:stroke markers fill;stop-color:#000000"
         id="rect25-8"
         width="78"
         height="45.033199"
         x="763.61322"
         y="452.82422" /></clipPath><rect
       x="-494.74638"
       y="22.382769"
       width="127.47302"
       height="81.183517"
       id="rect2101" /><linearGradient
       xlink:href="#3"
       id="linearGradient1331"
       x1="101.74381"
       y1="33.726189"
       x2="101.59915"
       y2="135.466"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(3.7794235,0,0,3.7794067,0.00151555,0.00377865)" /><linearGradient
       id="3"
       x2="1"
       gradientTransform="matrix(61.286,0,0,61.286,29.399,42.333)"
       gradientUnits="userSpaceOnUse"><stop
         offset="0"
         id="stop1397"
         style="stop-color:#afccfb" /><stop
         offset="1"
         id="stop1399"
         style="stop-color:#8bb5f8" /></linearGradient><linearGradient
       xlink:href="#linearGradient4975"
       id="linearGradient4633"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(231.62575,0,0,231.62472,111.11013,159.99363)"
       x2="0.5565635"
       x1="0.46521288"
       y1="-0.67390651"
       y2="0.81129867" /><linearGradient
       id="linearGradient4975"><stop
         style="stop-color:#1972e7"
         offset="0"
         id="stop4971" /><stop
         style="stop-color:#1969d5"
         offset="1"
         id="stop4973" /></linearGradient><linearGradient
       xlink:href="#1"
       id="linearGradient2962"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(94.931559,164.42687,-164.4276,94.931137,97.555991,173.61083)"
       x2="1.7695541"
       x1="0.018202547"
       y1="-0.51170158"
       y2="0.4994337" /><linearGradient
       id="1"
       x2="1"
       gradientTransform="matrix(25.118,43.506,-43.506,25.118,25.812,45.935)"
       gradientUnits="userSpaceOnUse"><stop
         offset="0"
         id="stop3122"
         style="stop-color:#659cf6" /><stop
         offset="1"
         id="stop3124"
         style="stop-color:#4285f4" /></linearGradient><linearGradient
       xlink:href="#2"
       id="linearGradient2688"
       x1="67.452377"
       y1="40.320694"
       x2="67.733002"
       y2="95.25"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(3.7794235,0,0,3.7794067,0.00150043,0.00377865)" /><linearGradient
       id="2"><stop
         style="stop-color:#3680f0"
         offset="0"
         id="stop2682" /><stop
         style="stop-color:#2678ec"
         offset="1"
         id="stop2684" /></linearGradient><linearGradient
       id="A"
       y2="2.0774293"
       x2="184.24542"
       y1="10.392067"
       x1="184.24542"
       gradientTransform="scale(0.14407583,6.9407894)"
       gradientUnits="userSpaceOnUse"><stop
         stop-color="#4f8041"
         offset="3.4%"
         id="stop4" /><stop
         stop-color="#638c4e"
         offset="15.4%"
         id="stop6" /><stop
         stop-color="#7d9c5f"
         offset="35.3%"
         id="stop8" /><stop
         stop-color="#8fa86b"
         offset="55.7%"
         id="stop10-3" /><stop
         stop-color="#9aaf73"
         offset="76.9%"
         id="stop12" /><stop
         stop-color="#9eb175"
         offset="100%"
         id="stop14" /></linearGradient><linearGradient
       id="B"
       y2="0"
       x2="0.5"
       y1="1"
       x1="0.5"><stop
         stop-color="#9eb175"
         offset="5.5%"
         id="stop17" /><stop
         stop-color="#75965e"
         offset="86.7%"
         id="stop19" /></linearGradient><linearGradient
       id="C"
       y2="0"
       x2="0.4998"
       y1="1"
       x1="0.4998"><stop
         stop-color="#9eb175"
         offset="5.5%"
         id="stop22" /><stop
         stop-color="#75965e"
         offset="86.7%"
         id="stop24" /></linearGradient><linearGradient
       id="D"
       y2="1.3944902"
       x2="129.25185"
       y1="8.8177328"
       x1="129.25185"
       gradientTransform="scale(0.11908542,8.3973334)"
       gradientUnits="userSpaceOnUse"><stop
         stop-color="#9eb175"
         offset="5.5%"
         id="stop27" /><stop
         stop-color="#75965e"
         offset="86.7%"
         id="stop29" /></linearGradient><linearGradient
       id="E"
       y2="3.9034047"
       x2="92.201569"
       y1="12.915045"
       x1="93.080383"
       gradientTransform="scale(0.21339148,4.6862227)"
       gradientUnits="userSpaceOnUse"><stop
         stop-color="#9eb175"
         offset="5.5%"
         id="stop32" /><stop
         stop-color="#75965e"
         offset="86.7%"
         id="stop34" /></linearGradient><linearGradient
       id="G"
       y2="2.5402403"
       x2="180.97466"
       y1="5.6283336"
       x1="180.97466"
       gradientTransform="scale(0.11366238,8.797986)"
       gradientUnits="userSpaceOnUse"><stop
         stop-color="#9eb175"
         offset="5.5%"
         id="stop42" /><stop
         stop-color="#75965e"
         offset="86.7%"
         id="stop44" /></linearGradient><linearGradient
       id="H"
       y2="9.1101055"
       x2="57.31118"
       y1="27.201332"
       x1="55.492306"
       gradientTransform="scale(0.36905501,2.7096232)"
       gradientUnits="userSpaceOnUse"><stop
         stop-color="#9eb175"
         offset="5.5%"
         id="stop47" /><stop
         stop-color="#75965e"
         offset="86.7%"
         id="stop49" /></linearGradient><linearGradient
       id="I"
       y2="7.3175435"
       x2="53.396126"
       y1="21.425396"
       x1="51.06197"
       gradientTransform="scale(0.28779188,3.4747333)"
       gradientUnits="userSpaceOnUse"><stop
         stop-color="#9eb175"
         offset="5.5%"
         id="stop52" /><stop
         stop-color="#75965e"
         offset="86.7%"
         id="stop54" /></linearGradient><linearGradient
       id="J"
       y2="5.6761918"
       x2="71.925369"
       y1="29.107836"
       x1="71.930054"
       gradientTransform="scale(0.39925382,2.5046723)"
       gradientUnits="userSpaceOnUse"><stop
         stop-color="#4f8041"
         offset="3.4%"
         id="stop57" /><stop
         stop-color="#638c4e"
         offset="15.4%"
         id="stop59" /><stop
         stop-color="#7d9c5f"
         offset="35.3%"
         id="stop61" /><stop
         stop-color="#8fa86b"
         offset="55.7%"
         id="stop63" /><stop
         stop-color="#9aaf73"
         offset="76.9%"
         id="stop65" /><stop
         stop-color="#9eb175"
         offset="100%"
         id="stop67" /></linearGradient><linearGradient
       id="K"
       y2="0"
       x2="0.5"
       y1="1"
       x1="0.5"><stop
         stop-color="#4f8041"
         offset="3.4%"
         id="stop70" /><stop
         stop-color="#638c4e"
         offset="15.4%"
         id="stop72" /><stop
         stop-color="#7d9c5f"
         offset="35.3%"
         id="stop74" /><stop
         stop-color="#8fa86b"
         offset="55.7%"
         id="stop76" /><stop
         stop-color="#9aaf73"
         offset="76.9%"
         id="stop78" /><stop
         stop-color="#9eb175"
         offset="100%"
         id="stop80" /></linearGradient><linearGradient
       id="L"
       y2="0"
       x2="0.4998"
       y1="1"
       x1="0.4998"><stop
         stop-color="#4f8041"
         offset="3.4%"
         id="stop83" /><stop
         stop-color="#638c4e"
         offset="15.4%"
         id="stop85" /><stop
         stop-color="#7d9c5f"
         offset="35.3%"
         id="stop87" /><stop
         stop-color="#8fa86b"
         offset="55.7%"
         id="stop89" /><stop
         stop-color="#9aaf73"
         offset="76.9%"
         id="stop91" /><stop
         stop-color="#9eb175"
         offset="100%"
         id="stop93" /></linearGradient><linearGradient
       id="M"
       y2="13.488061"
       x2="10.749421"
       y1="34.031029"
       x1="10.749421"
       gradientTransform="scale(0.48123521,2.0779859)"
       gradientUnits="userSpaceOnUse"><stop
         stop-color="#4f8041"
         offset="3.4%"
         id="stop96" /><stop
         stop-color="#638c4e"
         offset="15.4%"
         id="stop98" /><stop
         stop-color="#7d9c5f"
         offset="35.3%"
         id="stop100" /><stop
         stop-color="#8fa86b"
         offset="55.7%"
         id="stop102" /><stop
         stop-color="#9aaf73"
         offset="76.9%"
         id="stop104" /><stop
         stop-color="#9eb175"
         offset="100%"
         id="stop106" /></linearGradient><linearGradient
       id="N"
       y2="18.536503"
       x2="64.66124"
       y1="37.356964"
       x1="64.66124"
       gradientTransform="scale(0.52836136,1.8926441)"
       gradientUnits="userSpaceOnUse"><stop
         stop-color="#4f8041"
         offset="3.4%"
         id="stop109" /><stop
         stop-color="#638c4e"
         offset="15.4%"
         id="stop111" /><stop
         stop-color="#7d9c5f"
         offset="35.3%"
         id="stop113" /><stop
         stop-color="#8fa86b"
         offset="55.7%"
         id="stop115" /><stop
         stop-color="#9aaf73"
         offset="76.9%"
         id="stop117" /><stop
         stop-color="#9eb175"
         offset="100%"
         id="stop119" /></linearGradient><linearGradient
       id="O"
       y2="0.20882544"
       x2="82.824532"
       y1="14.512988"
       x1="79.493088"
       gradientTransform="scale(0.19658296,5.0869108)"
       gradientUnits="userSpaceOnUse"><stop
         stop-color="#4f8041"
         offset="3.4%"
         id="stop122" /><stop
         stop-color="#638c4e"
         offset="15.4%"
         id="stop124" /><stop
         stop-color="#7d9c5f"
         offset="35.3%"
         id="stop126" /><stop
         stop-color="#8fa86b"
         offset="55.7%"
         id="stop128" /><stop
         stop-color="#9aaf73"
         offset="76.9%"
         id="stop130" /><stop
         stop-color="#9eb175"
         offset="100%"
         id="stop132" /></linearGradient><linearGradient
       id="P"
       y2="52.610588"
       x2="19.706085"
       y1="53.903515"
       x1="19.108629"
       gradientTransform="scale(1.1171526,0.89513282)"
       gradientUnits="userSpaceOnUse"><stop
         stop-color="#8c825e"
         offset="26.7%"
         id="stop135" /><stop
         stop-color="#584c37"
         offset="100%"
         id="stop137" /></linearGradient><linearGradient
       id="Q"
       y2="49.484745"
       x2="34.711056"
       y1="49.484745"
       x1="32.341171"
       gradientTransform="scale(0.94083736,1.062883)"
       gradientUnits="userSpaceOnUse"><stop
         stop-color="#231000"
         offset="9%"
         id="stop140" /><stop
         stop-color="#4f3f3b"
         offset="100%"
         id="stop142" /></linearGradient><linearGradient
       id="R"
       y2="39.984211"
       x2="7.7396655"
       y1="39.44466"
       x1="6.5877571"
       gradientTransform="scale(0.83253725,1.2011475)"
       gradientUnits="userSpaceOnUse"><stop
         stop-color="#8c825e"
         offset="26.7%"
         id="stop145" /><stop
         stop-color="#584c37"
         offset="100%"
         id="stop147" /></linearGradient><linearGradient
       id="S"
       y2="30.880232"
       x2="20.256651"
       y1="30.181993"
       x1="19.218548"
       gradientTransform="scale(0.81982093,1.2197786)"
       gradientUnits="userSpaceOnUse"><stop
         stop-color="#8c825e"
         offset="26.7%"
         id="stop150" /><stop
         stop-color="#584c37"
         offset="100%"
         id="stop152" /></linearGradient><linearGradient
       id="T"
       y2="31.5473"
       x2="7.4820461"
       y1="31.152161"
       x1="6.6323571"
       gradientTransform="scale(0.83037572,1.2042741)"
       gradientUnits="userSpaceOnUse"><stop
         stop-color="#231000"
         offset="9%"
         id="stop155" /><stop
         stop-color="#4f3f3b"
         offset="100%"
         id="stop157" /></linearGradient><linearGradient
       id="U"
       y2="0.5"
       x2="1.0002999"
       y1="0.5"
       x1="0.00069999998"><stop
         stop-color="#231000"
         offset="9%"
         id="stop160" /><stop
         stop-color="#4f3f3b"
         offset="100%"
         id="stop162" /></linearGradient><linearGradient
       id="V"
       y2="14.989386"
       x2="42.810722"
       y1="14.989386"
       x1="41.197605"
       gradientTransform="scale(0.60310108,1.6580969)"
       gradientUnits="userSpaceOnUse"><stop
         stop-color="#8c825e"
         offset="26.7%"
         id="stop165" /><stop
         stop-color="#584c37"
         offset="100%"
         id="stop167" /></linearGradient><linearGradient
       id="W"
       y2="0.34509999"
       x2="0.70629996"
       y1="0.66500002"
       x1="0.3012"><stop
         stop-color="#231000"
         offset="9%"
         id="stop170" /><stop
         stop-color="#4f3f3b"
         offset="100%"
         id="stop172" /></linearGradient><linearGradient
       id="X"
       y2="28.497595"
       x2="5.4624529"
       y1="28.497595"
       x1="4.1541643"
       gradientTransform="scale(0.90737021,1.102086)"
       gradientUnits="userSpaceOnUse"><stop
         stop-color="#8c825e"
         offset="26.7%"
         id="stop175" /><stop
         stop-color="#584c37"
         offset="100%"
         id="stop177" /></linearGradient></defs><g
     inkscape:label="Capa 1"
     inkscape:groupmode="layer"
     id="layer1"><text
       xml:space="preserve"
       transform="scale(0.26458333)"
       id="text2099"
       style="font-style:normal;font-weight:normal;font-size:40px;line-height:1.25;font-family:sans-serif;white-space:pre;shape-inside:url(#rect2101);display:inline;fill:#000000;fill-opacity:1;stroke:none" /><script
       id="mesh_polyfill"
       type="text/javascript">&#10;!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();&#10;</script><rect
       style="fill:#ffffff;fill-opacity:1;stroke-width:0.668068"
       id="rect265"
       width="68.256561"
       height="32.933697"
       x="-2.9979858"
       y="-1.8747638" /><g
       id="g4"
       transform="matrix(1.0323509,0,0,1.0323509,16.031294,0.20240582)"
       style="opacity:0.28"><g
         id="g2"
         transform="matrix(1.1000006,0,0,1.1000006,-1.4585571,-1.3900083)"
         style="opacity:0.6"><path
           fill="none"
           stroke="#666666"
           stroke-width="2.19996"
           d="m 15.30002,4.7000019 a 9.1000143,11.400021 64 1 0 1.000003,0 z"
           id="path1" /><g
           stroke-linecap="round"
           id="g3"><path
             stroke="#000000"
             stroke-width="6"
             d="m 13.2,4.9 v 0 m -9.4,6.9 v 0 m 3.4,11.1 v 0 m 12.9,-1.7 v 0 m 4.3,-11.1 v 0"
             id="path2" /><path
             stroke="#9999ff"
             stroke-width="4.3"
             d="m 13.2,4.9 v 0 m -9.4,6.9 v 0 m 3.4,11.1 v 0 m 12.9,-1.7 v 0 m 4.3,-11.1 v 0"
             id="path3" /></g></g></g><g
       id="g1"
       transform="translate(-0.06915536,-2.6506282)"><path
         style="-inkscape-font-specification:'URW Gothic';opacity:0.6;stroke-width:0.0701146"
         d="m 4.7420947,17.749445 v 0.756357 h 4.6623158 c -0.1241779,0.541867 -0.4064004,1.004712 -0.8805342,1.478846 -0.6434673,0.643467 -1.5240016,0.993423 -2.494847,0.993423 -2.043291,0 -3.6576037,-1.557868 -3.6576037,-3.544715 0,-2.009424 1.580446,-3.556003 3.6463148,-3.556003 1.2869346,0 2.3706691,0.587022 2.946403,1.603023 H 9.901122 C 9.347966,14.057975 7.76752,13.109707 5.950007,13.109707 c -2.4835581,0 -4.4252489,1.885247 -4.4252489,4.301071 0,2.449692 1.9755575,4.334938 4.5381379,4.334938 1.3208014,0 2.4496914,-0.485423 3.2512033,-1.411112 0.6773337,-0.778934 1.0385787,-1.64818 1.0950237,-2.585159 z m 13.0273873,1.038579 c 0,-0.846667 -0.112889,-1.365957 -0.417689,-1.907824 -0.553156,-0.993423 -1.625602,-1.603024 -2.810936,-1.603024 -1.794935,0 -3.194759,1.411113 -3.194759,3.206048 0,1.828802 1.43369,3.262492 3.262492,3.262492 1.343379,0 2.551292,-0.869245 3.002848,-2.178758 h -0.869246 c -0.349955,0.846668 -1.219201,1.411113 -2.156179,1.411113 -1.275646,0 -2.336803,-0.970845 -2.404536,-2.190047 z m -5.565427,-0.756356 c 0.225778,-1.185335 1.162756,-1.986846 2.336802,-1.986846 1.196623,0 2.099735,0.745067 2.393247,1.986846 z m 9.719738,-2.754492 c -1.840091,0 -3.239915,1.388535 -3.239915,3.194759 0,1.907824 1.388535,3.273781 3.307648,3.273781 1.806224,0 3.138314,-1.365957 3.138314,-3.217336 0,-1.885247 -1.343379,-3.251204 -3.206047,-3.251204 z m 0,0.767646 c 1.365956,0 2.35938,1.049867 2.35938,2.494846 0,1.422402 -0.970846,2.438403 -2.314225,2.438403 -1.422401,0 -2.438402,-1.02729 -2.438402,-2.483558 0,-1.399824 1.02729,-2.449691 2.393247,-2.449691 z m 7.394216,1.704623 v 0.756357 h 4.662316 c -0.124178,0.541867 -0.406401,1.004712 -0.880534,1.478846 -0.643468,0.643467 -1.524002,0.993423 -2.494847,0.993423 -2.043291,0 -3.657604,-1.557868 -3.657604,-3.544715 0,-2.009424 1.580446,-3.556003 3.646315,-3.556003 1.286934,0 2.370669,0.587022 2.946403,1.603023 h 0.936979 c -0.553157,-1.422401 -2.133603,-2.370669 -3.951116,-2.370669 -2.483558,0 -4.425249,1.885247 -4.425249,4.301071 0,2.449692 1.975558,4.334938 4.538138,4.334938 1.320802,0 2.449692,-0.485423 3.251204,-1.411112 0.677334,-0.778934 1.038579,-1.64818 1.095023,-2.585159 z m 13.02739,1.038579 c 0,-0.846667 -0.112889,-1.365957 -0.41769,-1.907824 -0.553156,-0.993423 -1.625601,-1.603024 -2.810936,-1.603024 -1.794935,0 -3.194759,1.411113 -3.194759,3.206048 0,1.828802 1.433691,3.262492 3.262493,3.262492 1.343379,0 2.551291,-0.869245 3.002847,-2.178758 h -0.869245 c -0.349956,0.846668 -1.219201,1.411113 -2.15618,1.411113 -1.275646,0 -2.336803,-0.970845 -2.404536,-2.190047 z m -5.565428,-0.756356 c 0.225778,-1.185335 1.162757,-1.986846 2.336802,-1.986846 1.196624,0 2.099736,0.745067 2.393247,1.986846 z m 6.773325,3.567292 h 0.835379 v -1.061156 c 0.519289,0.767645 1.399823,1.207912 2.415824,1.207912 1.862669,0 3.262492,-1.388535 3.262492,-3.239914 0,-1.817513 -1.422401,-3.228626 -3.251203,-3.228626 -1.038579,0 -1.896535,0.428978 -2.427113,1.207913 v -3.228626 h -0.835379 z m 3.239914,-5.554138 c 1.388535,0 2.427114,1.049867 2.427114,2.438402 0,1.422401 -1.038579,2.494847 -2.438403,2.494847 -0.688622,0 -1.253068,-0.237067 -1.73849,-0.733779 -0.485423,-0.496711 -0.711201,-1.061156 -0.711201,-1.761068 0,-1.377246 1.072446,-2.438402 2.46098,-2.438402 z m 4.459106,5.554138 h 0.835379 v -3.601159 c -0.01129,-1.117601 0.609601,-1.806224 1.74978,-1.896535 v -0.82409 c -0.891824,0.04516 -1.422402,0.349956 -1.74978,1.02729 v -0.880534 h -0.835379 z m 9.31332,-6.175028 h -0.835379 v 1.095023 c -0.620889,-0.857956 -1.365957,-1.241779 -2.438402,-1.241779 -1.85138,0 -3.251204,1.399824 -3.251204,3.251204 0,1.851379 1.411113,3.217336 3.318937,3.217336 1.049868,0 1.704624,-0.338667 2.370669,-1.23049 v 1.083734 h 0.835379 z m -3.251203,0.62089 c 1.365957,0 2.415824,1.061156 2.415824,2.438402 0,1.411113 -1.038579,2.494847 -2.370669,2.494847 -1.399823,0 -2.472269,-1.095023 -2.472269,-2.506136 0,-1.343379 1.083734,-2.427113 2.427114,-2.427113 z"
         id="text1"
         aria-label="GeoGebra" /><g
         id="text1-8"><path
           style="color:#000000;-inkscape-font-specification:'URW Gothic';fill:#9999ff;-inkscape-stroke:none"
           d="m 4.3962358,17.657697 v 0.756356 h 4.6623159 c -0.1241779,0.541867 -0.4064004,1.004712 -0.8805342,1.478846 -0.6434674,0.643467 -1.5240016,0.993423 -2.494847,0.993423 -2.043291,0 -3.6576037,-1.557868 -3.6576037,-3.544715 0,-2.009424 1.580446,-3.556003 3.6463148,-3.556003 1.2869346,0 2.3706691,0.587023 2.946403,1.603024 H 9.5552633 C 9.0021072,13.966226 7.4216611,13.017959 5.6041482,13.017959 c -2.4835581,0 -4.425249,1.885246 -4.425249,4.301071 0,2.449691 1.9755576,4.334937 4.538138,4.334937 1.3208013,0 2.4496914,-0.485422 3.2512033,-1.411112 0.677334,-0.778934 1.0385785,-1.64818 1.0950235,-2.585158 z m 13.0273882,1.038578 c 0,-0.846667 -0.112889,-1.365956 -0.41769,-1.907824 -0.553156,-0.993423 -1.625601,-1.603024 -2.810936,-1.603024 -1.794935,0 -3.194759,1.411113 -3.194759,3.206048 0,1.828802 1.433691,3.262492 3.262492,3.262492 1.34338,0 2.551292,-0.869245 3.002848,-2.178757 h -0.869245 c -0.349956,0.846667 -1.219202,1.411112 -2.15618,1.411112 -1.275646,0 -2.336803,-0.970845 -2.404536,-2.190047 z m -5.565428,-0.756356 c 0.225778,-1.185334 1.162756,-1.986846 2.336802,-1.986846 1.196624,0 2.099736,0.745067 2.393247,1.986846 z m 9.719738,-2.754492 c -1.840091,0 -3.239915,1.388535 -3.239915,3.194759 0,1.907824 1.388535,3.273781 3.307648,3.273781 1.806224,0 3.138314,-1.365957 3.138314,-3.217336 0,-1.885247 -1.343379,-3.251204 -3.206047,-3.251204 z m 0,0.767646 c 1.365957,0 2.35938,1.049867 2.35938,2.494847 0,1.422401 -0.970846,2.438402 -2.314225,2.438402 -1.422401,0 -2.438402,-1.02729 -2.438402,-2.483558 0,-1.399824 1.02729,-2.449691 2.393247,-2.449691 z m 7.394216,1.704624 v 0.756356 h 4.662316 c -0.124178,0.541867 -0.4064,1.004712 -0.880534,1.478846 -0.643467,0.643467 -1.524002,0.993423 -2.494847,0.993423 -2.043291,0 -3.657604,-1.557868 -3.657604,-3.544715 0,-2.009424 1.580446,-3.556003 3.646315,-3.556003 1.286935,0 2.370669,0.587023 2.946403,1.603024 h 0.936979 c -0.553156,-1.422402 -2.133602,-2.370669 -3.951115,-2.370669 -2.483559,0 -4.425249,1.885246 -4.425249,4.301071 0,2.449691 1.975557,4.334937 4.538138,4.334937 1.320801,0 2.449691,-0.485422 3.251203,-1.411112 0.677334,-0.778934 1.038579,-1.64818 1.095023,-2.585158 z m 13.02739,1.038578 c 0,-0.846667 -0.112889,-1.365956 -0.417689,-1.907824 -0.553157,-0.993423 -1.625602,-1.603024 -2.810937,-1.603024 -1.794935,0 -3.194758,1.411113 -3.194758,3.206048 0,1.828802 1.43369,3.262492 3.262492,3.262492 1.343379,0 2.551291,-0.869245 3.002847,-2.178757 H 40.97225 c -0.349956,0.846667 -1.219201,1.411112 -2.15618,1.411112 -1.275646,0 -2.336802,-0.970845 -2.404536,-2.190047 z m -5.565428,-0.756356 c 0.225778,-1.185334 1.162757,-1.986846 2.336802,-1.986846 1.196624,0 2.099736,0.745067 2.393247,1.986846 z m 6.773325,3.567293 h 0.835379 v -1.061157 c 0.519289,0.767645 1.399823,1.207912 2.415824,1.207912 1.862669,0 3.262493,-1.388534 3.262493,-3.239914 0,-1.817513 -1.422402,-3.228626 -3.251204,-3.228626 -1.038579,0 -1.896535,0.428979 -2.427113,1.207913 v -3.228626 h -0.835379 z m 3.239915,-5.554139 c 1.388534,0 2.427113,1.049867 2.427113,2.438402 0,1.422402 -1.038579,2.494847 -2.438402,2.494847 -0.688623,0 -1.253068,-0.237067 -1.738491,-0.733778 -0.485423,-0.496712 -0.711201,-1.061157 -0.711201,-1.761069 0,-1.377246 1.072446,-2.438402 2.460981,-2.438402 z m 4.459105,5.554139 h 0.835379 v -3.60116 c -0.01129,-1.117601 0.609601,-1.806224 1.74978,-1.896535 v -0.82409 c -0.891823,0.04516 -1.422402,0.349956 -1.74978,1.02729 v -0.880534 h -0.835379 z m 9.31332,-6.175029 h -0.835379 v 1.095024 c -0.620889,-0.857957 -1.365957,-1.24178 -2.438402,-1.24178 -1.85138,0 -3.251203,1.399824 -3.251203,3.251204 0,1.851379 1.411112,3.217336 3.318936,3.217336 1.049868,0 1.704624,-0.338667 2.370669,-1.23049 v 1.083735 h 0.835379 z m -3.251203,0.62089 c 1.365957,0 2.415824,1.061156 2.415824,2.438402 0,1.411113 -1.038578,2.494847 -2.370669,2.494847 -1.399823,0 -2.472269,-1.095023 -2.472269,-2.506136 0,-1.343379 1.083735,-2.427113 2.427114,-2.427113 z"
           id="path5" /><path
           style="color:#000000;-inkscape-font-specification:'URW Gothic';fill:#bca411;-inkscape-stroke:none"
           d="m 5.6035156,12.982422 c -2.5012967,0 -4.4589844,1.90133 -4.4589844,4.335937 0,2.468537 1.9924938,4.371094 4.5722657,4.371094 1.3293895,0 2.4691398,-0.490409 3.2773437,-1.423828 0.6817575,-0.784021 1.0466094,-1.660829 1.1035154,-2.605469 l 0.002,-0.03711 H 4.3613281 v 0.03516 0.791016 h 4.6367188 c -0.1278323,0.514729 -0.3885376,0.960803 -0.8457031,1.417968 -0.6366534,0.636653 -1.5063302,0.984375 -2.4687501,0.984375 -2.0254697,0 -3.6230468,-1.541909 -3.6230468,-3.509765 0,-1.99104 1.5629581,-3.521484 3.6113281,-3.521484 1.2762726,0 2.34673,0.581315 2.9160156,1.585937 l 0.00977,0.01758 H 9.6074219 L 9.5878906,15.375 C 9.0284671,13.936482 7.4332205,12.982422 5.6035156,12.982422 Z m 24.5761714,0 c -2.501297,0 -4.458984,1.90133 -4.458984,4.335937 0,2.468537 1.992493,4.371094 4.572266,4.371094 1.329389,0 2.469139,-0.490409 3.277343,-1.423828 0.681758,-0.784021 1.046611,-1.660829 1.103516,-2.605469 l 0.002,-0.03711 H 28.9375 v 0.03516 0.791016 h 4.636719 c -0.127833,0.514729 -0.388538,0.960803 -0.845703,1.417968 -0.636653,0.636653 -1.506331,0.984376 -2.46875,0.984375 -2.02547,0 -3.623047,-1.541909 -3.623047,-3.509765 0,-1.99104 1.562958,-3.521484 3.611328,-3.521484 1.276273,0 2.34673,0.581315 2.916015,1.585937 l 0.0098,0.01758 h 1.007813 L 34.164062,15.375 c -0.559423,-1.438518 -2.154669,-2.392578 -3.984375,-2.392578 z m -24.5761714,0.07031 c 1.7804432,0 3.3119974,0.926581 3.8789063,2.300782 H 8.6308594 C 8.0454924,14.339888 6.9600292,13.75 5.671875,13.75 c -2.0833634,0 -3.6816406,1.563993 -3.6816406,3.591797 0,2.005834 1.6322512,3.580078 3.6933593,3.580078 0.9792691,0 1.8692511,-0.353626 2.5195313,-1.003906 0.4772812,-0.477282 0.7628816,-0.947191 0.8886719,-1.496094 l 0.011719,-0.04297 h -4.671875 v -0.685547 h 5.5800784 c -0.063772,0.913931 -0.4071326,1.764687 -1.0703127,2.527344 -0.7948183,0.917959 -1.912399,1.398438 -3.2246094,1.398438 -2.5453838,0 -4.5019531,-1.869941 -4.5019532,-4.300782 0,-2.397038 1.9228574,-4.265625 4.3886719,-4.265625 z m 24.5761714,0 c 1.78043,0 3.310034,0.926599 3.876954,2.300782 h -0.84961 C 32.621664,14.339888 31.536201,13.75 30.248047,13.75 c -2.083364,0 -3.681641,1.563993 -3.681641,3.591797 0,2.005834 1.632252,3.580078 3.69336,3.580078 0.979268,0 1.869251,-0.353626 2.519531,-1.003906 0.477281,-0.477282 0.762881,-0.947191 0.888672,-1.496094 l 0.0098,-0.04297 h -4.669922 v -0.685547 h 5.580079 c -0.06377,0.913931 -0.407133,1.764687 -1.070313,2.527344 -0.794818,0.917959 -1.912399,1.398438 -3.224609,1.398438 -2.545385,0 -4.503906,-1.869941 -4.503907,-4.300782 0,-2.397038 1.92481,-4.265625 4.390625,-4.265625 z m 12.992188,0.07617 v 8.414063 h 0.03516 0.871094 v -1.021485 c 0.531633,0.733258 1.38676,1.167969 2.380859,1.167969 1.88009,0 3.296875,-1.406341 3.296875,-3.275391 0,-1.835801 -1.438322,-3.263671 -3.285156,-3.263671 -1.015579,0 -1.852212,0.423492 -2.392578,1.166015 v -3.1875 z m 0.07031,0.07031 h 0.765625 v 3.308593 l 0.06445,-0.0957 c 0.524049,-0.76935 1.369513,-1.191406 2.398437,-1.191406 1.810767,0 3.214844,1.394139 3.214844,3.193359 0,1.833708 -1.381318,3.205079 -3.226563,3.205079 -1.005872,0 -1.87425,-0.435797 -2.386718,-1.19336 l -0.06445,-0.09375 v 1.140625 h -0.765625 z m 10.285157,1.949219 -0.03711,0.002 c -0.855175,0.0433 -1.376655,0.35358 -1.71289,0.972656 v -0.826172 h -0.90625 v 6.246094 h 0.03516 0.871094 V 17.90625 c -0.0056,-0.552236 0.144209,-0.99498 0.433593,-1.310547 0.289385,-0.315567 0.719607,-0.50614 1.283204,-0.550781 l 0.0332,-0.0039 z m -39.332031,0.002 c -1.813308,0 -3.230469,1.427074 -3.230469,3.240234 0,1.847122 1.451707,3.298828 3.298828,3.298828 1.358501,0 2.578878,-0.879919 3.035156,-2.203125 l 0.01563,-0.04687 h -0.941406 l -0.0098,0.02148 c -0.344228,0.832811 -1.200149,1.390625 -2.123047,1.390625 -1.24265,0 -2.262444,-0.941527 -2.351562,-2.121093 h 5.570312 v -0.03516 c 0,-0.849782 -0.114195,-1.376842 -0.421875,-1.923828 -0.559559,-1.004923 -1.644443,-1.621093 -2.841796,-1.621093 z m 7.382812,0 c -1.857725,0 -3.275391,1.406133 -3.275391,3.230468 0,1.924833 1.408004,3.308594 3.34375,3.308594 1.823897,0 3.171875,-1.38376 3.171875,-3.251953 0,-1.901899 -1.360429,-3.287109 -3.240234,-3.287109 z m 17.193359,0 c -1.813307,0 -3.230468,1.427074 -3.230468,3.240234 0,1.847122 1.449752,3.298828 3.296875,3.298828 1.3585,0 2.580831,-0.879919 3.037109,-2.203125 l 0.01563,-0.04687 h -0.941406 l -0.0098,0.02148 c -0.344228,0.832811 -1.200148,1.390625 -2.123047,1.390625 -1.24265,0 -2.262443,-0.941527 -2.351562,-2.121093 h 5.570312 v -0.03516 c 0,-0.849782 -0.114196,-1.376842 -0.421875,-1.923828 -0.55956,-1.004922 -1.644443,-1.621093 -2.841797,-1.621093 z m 18.173828,0 c -1.869049,0 -3.285156,1.41806 -3.285156,3.287109 0,1.869191 1.42896,3.251953 3.353516,3.251953 1.026094,0 1.685296,-0.348263 2.335937,-1.1875 v 1.041016 h 0.904297 v -6.246094 h -0.0332 -0.871094 v 1.052734 c -0.615153,-0.812062 -1.355451,-1.199218 -2.404297,-1.199218 z m -42.749999,0.07031 c 1.173314,0 2.232545,0.602063 2.779296,1.583984 0.296602,0.527292 0.402374,1.040164 0.40625,1.857422 h -5.582031 l 0.002,0.03516 c 0.0688,1.238419 1.146021,2.224609 2.439453,2.224609 0.941322,0 1.80922,-0.566265 2.171875,-1.412109 h 0.785157 c -0.462159,1.263238 -1.625353,2.109375 -2.933594,2.109375 -1.810477,0 -3.228516,-1.418038 -3.228516,-3.228516 0,-1.776706 1.383597,-3.169922 3.160157,-3.169922 z m 7.382812,0 c 1.845527,0 3.169922,1.348206 3.169922,3.216797 0,1.834561 -1.313015,3.181641 -3.101563,3.181641 -1.902476,0 -3.273437,-1.34747 -3.273437,-3.238282 0,-1.788109 1.382625,-3.160156 3.205078,-3.160156 z m 17.193359,0 c 1.173315,0 2.232545,0.602063 2.779297,1.583984 0.296601,0.527292 0.402374,1.040164 0.40625,1.857422 H 36.375 l 0.002,0.03516 c 0.0688,1.238419 1.146021,2.224609 2.439453,2.224609 0.941323,0 1.807266,-0.566265 2.169922,-1.412109 h 0.787109 c -0.462158,1.263238 -1.627306,2.109375 -2.935546,2.109375 -1.810478,0 -3.226563,-1.418038 -3.226563,-3.228516 0,-1.776706 1.383597,-3.169922 3.160156,-3.169922 z m 18.173828,0 c 1.06408,0 1.794166,0.375375 2.410157,1.226563 l 0.06445,0.08789 v -1.167968 h 0.765625 v 6.105468 h -0.765625 v -1.154297 l -0.06445,0.08398 c -0.662,0.886406 -1.299469,1.216797 -2.341797,1.216797 -1.891089,0 -3.283203,-1.348078 -3.283203,-3.181641 0,-1.833707 1.381136,-3.216797 3.214843,-3.216797 z m -3.488281,0.0098 v 0.757812 c -0.55717,0.05158 -1.002686,0.237612 -1.298828,0.560547 -0.303282,0.330722 -0.456883,0.792058 -0.451172,1.357422 v 3.566406 h -0.765625 v -6.105468 h 0.765625 v 0.845703 l 0.06641,0.01563 c 0.317113,-0.656096 0.827005,-0.945461 1.683594,-0.998047 z m -39.261718,0.6875 c -1.190001,0 -2.142524,0.815633 -2.371094,2.015625 l -0.0078,0.04102 h 0.04102 4.77539 l -0.0098,-0.04297 c -0.296492,-1.25439 -1.21656,-2.013672 -2.427734,-2.013672 z m 7.382812,0 c -1.383919,0 -2.427734,1.0674 -2.427734,2.484375 0,1.472572 1.033377,2.519531 2.472656,2.519531 1.361053,0 2.349609,-1.036258 2.349609,-2.474609 0,-1.461047 -1.010612,-2.529297 -2.394531,-2.529297 z m 17.193359,0 c -1.189999,0 -2.142523,0.815632 -2.371093,2.015625 l -0.0078,0.04102 h 0.04102 4.77539 l -0.0098,-0.04297 c -0.296492,-1.25439 -1.21656,-2.013672 -2.427735,-2.013672 z m 7.675782,0 c -1.406395,0 -2.496094,1.077212 -2.496094,2.472656 0,0.70745 0.229799,1.284789 0.720703,1.787109 0.49102,0.502439 1.067004,0.744141 1.763672,0.744141 1.417727,0 2.474609,-1.091785 2.474609,-2.53125 0,-1.406015 -1.056687,-2.472656 -2.46289,-2.472656 z m 10.521484,0 c -1.362232,0 -2.462891,1.100658 -2.462891,2.46289 0,1.428874 1.089709,2.541016 2.507813,2.541016 1.351104,0 2.40625,-1.102937 2.40625,-2.53125 0,-1.395061 -1.06706,-2.472656 -2.451172,-2.472656 z m -42.773437,0.07031 c 1.164401,0 2.030312,0.719953 2.333984,1.916016 h -4.613281 c 0.240185,-1.141685 1.138591,-1.916016 2.279297,-1.916016 z m 7.382812,0 c 1.347992,0 2.324219,1.030074 2.324219,2.458985 0,1.406447 -0.953595,2.404297 -2.279297,2.404296 -1.40552,0 -2.402344,-1.009257 -2.402344,-2.449218 0,-1.382671 1.00943,-2.414063 2.357422,-2.414063 z m 17.193359,0 c 1.164402,0 2.030313,0.719953 2.333985,1.916016 h -4.613282 c 0.240186,-1.141685 1.138593,-1.916016 2.279297,-1.916016 z m 7.675782,0 c 1.370861,0 2.392578,1.031292 2.392578,2.402344 0,1.405336 -1.022381,2.460938 -2.404297,2.460937 -0.680577,0 -1.233066,-0.231673 -1.712891,-0.722656 -0.479941,-0.491103 -0.701172,-1.045909 -0.701172,-1.738281 0,-1.359045 1.055109,-2.402344 2.425782,-2.402344 z m 10.521484,0 c 1.347799,0 2.380859,1.042915 2.380859,2.402344 0,1.39391 -1.022862,2.460937 -2.335937,2.460937 -1.381539,0 -2.4375,-1.077353 -2.4375,-2.470703 0,-1.324523 1.068055,-2.392578 2.392578,-2.392578 z"
           id="path6" /></g></g></g><script
     id="script1169"
     type="text/javascript">&#10;!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();&#10;</script></svg>
