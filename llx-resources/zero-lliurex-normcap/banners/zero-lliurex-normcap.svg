<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="235"
   height="110"
   viewBox="0 0 62.177082 29.104167"
   version="1.1"
   id="svg900"
   inkscape:version="1.3 (1:1.3+202307231459+0e150ed6c4)"
   sodipodi:docname="zero-lliurex-normcap.svg"
   xml:space="preserve"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><sodipodi:namedview
     id="namedview902"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:document-units="mm"
     showgrid="false"
     units="px"
     inkscape:zoom="2"
     inkscape:cx="34"
     inkscape:cy="30"
     inkscape:window-width="1920"
     inkscape:window-height="882"
     inkscape:window-x="0"
     inkscape:window-y="0"
     inkscape:window-maximized="1"
     inkscape:current-layer="text2"
     inkscape:showpageshadow="2"
     inkscape:deskcolor="#d1d1d1" /><defs
     id="defs897"><linearGradient
       id="linearGradient4689"><stop
         style="stop-color:#5a9fd4;stop-opacity:1;"
         offset="0"
         id="stop4691" /><stop
         style="stop-color:#306998;stop-opacity:1;"
         offset="1"
         id="stop4693" /></linearGradient><linearGradient
       id="linearGradient4671"><stop
         style="stop-color:#ffd43b;stop-opacity:1;"
         offset="0"
         id="stop4673" /><stop
         style="stop-color:#ffe873;stop-opacity:1"
         offset="1"
         id="stop4675" /></linearGradient><linearGradient
       id="linearGradient4280"><stop
         style="stop-color:#eeffaa;stop-opacity:1;"
         offset="0"
         id="stop4282" /><stop
         style="stop-color:#eeffaa;stop-opacity:1;"
         offset="1"
         id="stop4284" /></linearGradient></defs><g
     inkscape:label="Capa 1"
     inkscape:groupmode="layer"
     id="layer1"><script
       id="mesh_polyfill"
       type="text/javascript">&#10;!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();&#10;</script><g
       id="g1"
       transform="matrix(0.69663268,0,0,0.69663268,10.544076,2.6004716)"><rect
         style="opacity:1;fill:#000000;fill-opacity:0.843137;stroke:#f83589;stroke-width:0.100474;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;paint-order:markers fill stroke"
         id="rect1"
         width="92.60833"
         height="47.587811"
         x="-16.126543"
         y="-6.2408724" /><path
         style="fill:#ff2e88;fill-opacity:1;stroke-width:0.215377;opacity:0.67"
         d="m 47.592528,35.758943 c 1.443781,-1.330834 1.419085,-1.38341 -2.485408,-5.29299 l -3.393062,-3.397491 h 0.868526 0.868518 l -0.06002,-1.36823 c -0.04606,-1.054446 -0.12966,-1.368249 -0.363981,-1.368249 -0.212796,0 -0.322759,0.258561 -0.36639,0.861498 l -0.0625,0.861493 H 41.615798 40.633282 L 32.852383,18.149525 C 24.00864,9.1642257 24.497559,9.5109647 22.98519,11.151706 c -0.465356,0.504858 -0.837421,1.112018 -0.838421,1.368229 -0.0021,0.337802 1.769364,2.203533 6.638545,6.995033 4.907042,4.828751 6.624097,6.639182 6.578096,6.935838 -0.04603,0.296697 0.08618,0.436036 0.506743,0.53408 0.378087,0.08823 2.170745,1.722887 5.34226,4.871678 2.625272,2.606451 4.930527,4.739019 5.122801,4.739019 0.192255,0 0.758004,-0.37649 1.257202,-0.83664 z m -9.586608,-7.731934 -7.958516,-7.960453 1.020228,-1.004859 1.020218,-1.004906 8.003482,8.00154 c 4.401873,4.400843 8.003434,8.112792 8.003434,8.248811 0,0.445483 -1.245092,1.680326 -1.694278,1.680326 -0.303751,0 -2.850589,-2.41516 -8.394568,-7.960459 z M 15.746912,26.945456 c 0.17635,-0.06761 0.320639,-0.240347 0.320639,-0.383733 0,-0.320864 -0.452132,-0.506749 -1.232803,-0.506749 -0.55228,0 -0.591535,-0.05243 -0.591535,-0.789137 0,-0.506814 -0.106471,-0.829979 -0.297565,-0.903308 -0.163659,-0.06277 -0.336596,-0.04969 -0.384302,0.02897 -0.08761,0.14458 -0.203474,1.955097 -0.155106,2.423587 0.02755,0.266735 1.73718,0.361928 2.340672,0.130331 z m 5.472988,0 c 0.413228,-0.158577 0.413228,-0.608877 0,-0.767466 -0.526119,-0.201878 -2.077756,-0.139363 -2.219143,0.08923 -0.29759,0.481511 0.09998,0.801115 0.996582,0.801115 0.496086,0 1.046242,-0.0554 1.222561,-0.123026 z m 5.569808,-0.06244 c 0.15563,-0.09849 0.226887,-0.325198 0.158392,-0.503656 -0.09356,-0.243741 -0.4052,-0.32452 -1.252108,-0.32452 -0.846917,0 -1.158603,0.08074 -1.252135,0.32452 -0.168675,0.439562 0.277365,0.682796 1.252135,0.682796 0.445942,0 0.938129,-0.08064 1.093716,-0.17914 z m 5.473007,0 c 0.155609,-0.09849 0.226916,-0.325198 0.158387,-0.503656 -0.09351,-0.243741 -0.405201,-0.32452 -1.252104,-0.32452 -0.846912,0 -1.158616,0.08074 -1.252141,0.32452 -0.16866,0.439562 0.277368,0.682796 1.252141,0.682796 0.445935,0 0.938125,-0.08064 1.093717,-0.17914 z M 14.201559,20.100753 c -0.04529,-0.942136 -0.133065,-1.241811 -0.363753,-1.241811 -0.224896,0 -0.320248,0.284007 -0.366243,1.090746 -0.0747,1.310109 0.03988,1.68052 0.468942,1.515866 0.25393,-0.09745 0.308314,-0.381758 0.261054,-1.364801 z m 29.190013,0.02513 c -0.04595,-0.964176 -0.133039,-1.266916 -0.364405,-1.266916 -0.231401,0 -0.318485,0.30274 -0.364402,1.266918 -0.05579,1.1702 -0.02791,1.266897 0.364402,1.266897 0.392335,0 0.420144,-0.09667 0.364405,-1.266899 z M 16.036869,17.040235 c 0.5963,0.179304 1.129593,0.280628 1.18509,0.225156 0.05551,-0.05551 -0.181555,-0.511405 -0.526752,-1.013155 -0.345211,-0.501715 -0.627656,-0.970593 -0.627656,-1.041923 0,-0.07103 0.273646,-0.527389 0.608108,-1.013512 0.334456,-0.486127 0.608117,-0.973095 0.608117,-1.082134 0,-0.110559 -0.535938,-0.03617 -1.210029,0.168089 l -1.210027,0.366362 -0.761678,-0.998785 c -0.861149,-1.12919 -1.03524,-1.021264 -1.060806,0.657811 l -0.0143,0.935685 -1.25742,0.458479 -1.257422,0.458471 1.206747,0.448991 c 1.063481,0.395644 1.213096,0.518904 1.260267,1.038227 0.02944,0.324154 0.10568,0.905539 0.169439,1.291984 l 0.115921,0.702624 0.84408,-0.964213 0.844078,-0.964237 z m 27.354039,-2.412492 c -0.04524,-0.942117 -0.133105,-1.241764 -0.363741,-1.241764 -0.224899,0 -0.320247,0.283975 -0.366244,1.090718 -0.07473,1.310134 0.03996,1.680545 0.468946,1.515887 0.253917,-0.09753 0.308315,-0.381779 0.261039,-1.364841 z m -9.578896,-4.346953 0.41331,-0.4847786 1.481121,0.4410976 c 0.814627,0.242621 1.526194,0.396061 1.58125,0.341017 0.05504,-0.05508 -0.272954,-0.6494234 -0.728897,-1.3208378 -0.455921,-0.6713728 -0.828981,-1.3219314 -0.828981,-1.4456551 0,-0.1237224 0.37306,-0.7742762 0.828981,-1.4456712 0.455943,-0.6714053 0.793287,-1.2564237 0.74968,-1.3000471 -0.0437,-0.04363 -0.667494,0.099529 -1.38641,0.3181277 C 35.203143,5.6026371 34.509435,5.7821832 34.38045,5.7830368 34.251446,5.7839213 33.753,5.3152644 33.272748,4.741655 32.664158,4.0147607 32.397415,3.5080089 32.392397,3.0693489 l -0.0091,-0.6293738 h -1.216192 c -1.081095,0 -1.216238,0.045047 -1.216238,0.4054042 0,0.3434746 0.154839,0.414436 1.013525,0.4644995 l 1.013542,0.059064 -0.10127,1.6443852 -0.101297,1.6443928 -1.317561,0.4895844 c -0.724681,0.269273 -1.384258,0.5545182 -1.46574,0.6338802 -0.08146,0.079381 0.534219,0.3980576 1.36825,0.7082174 l 1.516381,0.5639288 v 1.2882544 c 0,1.960682 0.142013,2.152297 0.895118,1.20788 0.343793,-0.431169 0.811091,-1.002061 1.038393,-1.268691 z M 14.201559,9.154726 c -0.04529,-0.9421104 -0.133065,-1.2417545 -0.363753,-1.2417545 -0.224896,0 -0.320248,0.283969 -0.366243,1.090714 -0.0747,1.3101245 0.03988,1.6805215 0.468942,1.5158965 0.25393,-0.09745 0.308314,-0.381785 0.261054,-1.364856 z m 29.189349,0 c -0.04524,-0.9421104 -0.133092,-1.2417545 -0.363741,-1.2417545 -0.224899,0 -0.320247,0.283969 -0.366244,1.090714 -0.07473,1.3101245 0.03996,1.6805215 0.468946,1.5158965 0.253917,-0.09748 0.308315,-0.381785 0.261039,-1.364856 z M 19.513517,7.4062135 c 0.701142,-0.8918955 1.330675,-1.6216299 1.398957,-1.6216299 0.06832,0 0.944486,0.2269078 1.94708,0.5042403 1.002607,0.2773309 1.891916,0.505378 1.976247,0.5067612 0.08433,0.00143 -0.36013,-0.7690774 -0.987715,-1.7121353 -0.683474,-1.0270252 -1.093104,-1.8396759 -1.021448,-2.0264049 0.06587,-0.171463 0.581471,-0.9961622 1.145926,-1.8326641 0.564475,-0.83650274 0.97298,-1.5209147 0.907782,-1.5209147 -0.06513,0 -0.929552,0.22804514 -1.920864,0.50676003 -0.991313,0.27871801 -1.892075,0.50676261 -2.001716,0.50676261 -0.109661,0 -0.77589,-0.73060294 -1.480587,-1.62355724 -1.279864,-1.621827 -1.281296,-1.6228514 -1.330723,-0.9628448 -0.286364,3.8236647 -0.222436,3.5806261 -1.032444,3.9240718 -0.410419,0.1740132 -1.422244,0.3305464 -2.262687,0.3500428 l -1.52028,0.035267 0.0715,1.2162223 c 0.0825,1.4033183 0.137544,1.5440175 0.543105,1.3883866 0.189064,-0.072555 0.297567,-0.3938258 0.297567,-0.8810863 v -0.766898 l 1.773651,0.6666616 1.773668,0.6666619 0.137008,0.8820672 c 0.07536,0.4851333 0.143759,1.4521623 0.152024,2.1489623 0.008,0.6967943 0.04748,1.2668904 0.0871,1.2668904 0.03969,0 0.645731,-0.7297288 1.346866,-1.6216227 z M 43.432572,3.624833 V 2.3192722 l -1.266887,0.060349 c -1.111659,0.052945 -1.266915,0.1100338 -1.266915,0.4657563 0,0.3320371 0.155925,0.4166881 0.861503,0.4677381 0.850395,0.061534 0.861481,0.072187 0.861481,0.8277113 0,0.8615253 0.114393,1.0567981 0.526585,0.8986404 0.203124,-0.077946 0.284233,-0.4815842 0.284233,-1.4146343 z M 26.789708,3.1667862 c 0.15563,-0.098521 0.226887,-0.3251734 0.158392,-0.503656 -0.09323,-0.2428437 -0.403692,-0.3245138 -1.233826,-0.3245138 -1.127846,0 -1.46164,0.1906867 -1.258838,0.7191716 0.127448,0.3322259 1.854389,0.4128649 2.334272,0.1089982 z m 10.945998,0 C 37.89133,3.0682652 37.96261,2.8416128 37.894119,2.6631302 37.800889,2.4202865 37.490423,2.3386164 36.66032,2.3386164 c -1.127882,0 -1.46165,0.1906867 -1.258868,0.7191716 0.127462,0.3322259 1.854374,0.4128649 2.334254,0.1089982 z"
         id="path9"
         sodipodi:nodetypes="cccsccccsccccsscsccsscccccccssccsssccscccccscccsscscccscscsscsscscsccccsssccccccccsccccccscccccccssccscsccssccccccccscccssccscsccccsscsccsssccsscssscccccsccsccsssssccsccccssc" /><g
         id="text2"><path
           style="color:#000000;-inkscape-font-specification:'Arial Bold';fill:#ffffff;stroke-linecap:round;stroke-linejoin:round;-inkscape-stroke:none;paint-order:markers fill stroke"
           d="M -6.0718515,21.456732 V 9.8569347 h 2.2788142 L 0.95449218,17.60332 V 9.8569347 H 3.1304432 V 21.456732 H 0.7804161 l -4.6763166,-7.564397 v 7.564397 z M 5.0769306,17.13648 q 0,-1.107757 0.5459659,-2.144301 0.5459659,-1.036544 1.5429471,-1.58251 1.0048937,-0.545966 2.2392514,-0.545966 1.906924,0 3.125457,1.242271 1.218533,1.234357 1.218533,3.125457 0,1.906924 -1.234358,3.165019 -1.226445,1.250183 -3.0938069,1.250183 -1.1552322,0 -2.2076012,-0.522228 Q 6.1688624,20.602176 5.6228965,19.597283 5.0769306,18.584476 5.0769306,17.13648 Z m 2.2788142,0.118688 q 0,1.250183 0.5934412,1.914837 0.5934412,0.664654 1.4638216,0.664654 0.8703804,0 1.4559094,-0.664654 0.593441,-0.664654 0.593441,-1.930662 0,-1.234358 -0.593441,-1.899012 -0.585529,-0.664654 -1.4559094,-0.664654 -0.8703804,0 -1.4638216,0.664654 -0.5934412,0.664654 -0.5934412,1.914837 z m 10.2625762,4.201564 h -2.223427 v -8.403127 h 2.065176 v 1.194794 q 0.530141,-0.846642 0.949506,-1.115669 0.427277,-0.269027 0.965331,-0.269027 0.759604,0 1.463821,0.419365 l -0.688392,1.938575 q -0.561791,-0.363977 -1.044456,-0.363977 -0.46684,0 -0.791255,0.261114 -0.324414,0.253201 -0.514316,0.925768 -0.181988,0.672567 -0.181988,2.816868 z m 4.011662,-8.403127 h 2.04935 v 1.147319 q 1.099844,-1.337221 2.619054,-1.337221 0.80708,0 1.400521,0.332327 0.593441,0.332328 0.973243,1.004894 0.553879,-0.672566 1.194795,-1.004894 0.640917,-0.332327 1.368871,-0.332327 0.925769,0 1.566685,0.379803 0.640917,0.37189 0.957418,1.099844 0.229464,0.538053 0.229464,1.740761 v 5.372621 h -2.223426 v -4.802918 q 0,-1.250182 -0.229464,-1.61416 -0.308589,-0.474753 -0.949506,-0.474753 -0.46684,0 -0.878293,0.284852 -0.411452,0.284852 -0.593441,0.83873 -0.181989,0.545966 -0.181989,1.732849 v 4.0354 h -2.223426 v -4.605104 q 0,-1.226445 -0.118688,-1.58251 -0.118688,-0.356064 -0.37189,-0.53014 -0.245289,-0.174077 -0.672567,-0.174077 -0.514315,0 -0.925768,0.27694 -0.411452,0.276939 -0.593441,0.799167 -0.174076,0.522228 -0.174076,1.732848 v 4.082876 h -2.223426 z m 22.012714,4.138263 2.270901,0.720042 q -0.522228,1.899012 -1.740761,2.82478 -1.21062,0.917856 -3.077981,0.917856 -2.310465,0 -3.798024,-1.574598 -1.487559,-1.58251 -1.487559,-4.320252 0,-2.895993 1.495472,-4.494328 1.495472,-1.606247 3.932537,-1.606247 2.128475,0 3.457784,1.258095 0.791255,0.74378 1.186882,2.136389 l -2.318377,0.553878 q -0.205726,-0.902031 -0.862468,-1.424259 -0.648829,-0.522228 -1.58251,-0.522228 -1.289745,0 -2.096825,0.925768 -0.799168,0.925768 -0.799168,2.998856 0,2.199689 0.791255,3.13337 0.791255,0.933681 2.057263,0.933681 0.933681,0 1.606248,-0.593442 0.672566,-0.593441 0.965331,-1.867361 z m 5.926498,-1.574598 -2.0177,-0.363977 q 0.34024,-1.218532 1.171058,-1.804061 0.830817,-0.585529 2.468715,-0.585529 1.487559,0 2.215514,0.356065 0.727954,0.348152 1.020719,0.894118 0.300676,0.538053 0.300676,1.98605 l -0.02374,2.595316 q 0,1.107757 0.102863,1.637898 0.110776,0.522228 0.40354,1.123582 h -2.199689 q -0.08704,-0.221552 -0.213639,-0.656742 -0.05539,-0.197814 -0.07912,-0.261114 -0.569704,0.553879 -1.218533,0.830818 -0.648829,0.276939 -1.384696,0.276939 -1.297658,0 -2.04935,-0.704217 -0.74378,-0.704217 -0.74378,-1.780323 0,-0.71213 0.34024,-1.266008 0.34024,-0.561791 0.949506,-0.854556 0.617179,-0.300677 1.772411,-0.522228 1.558772,-0.292764 2.160126,-0.545966 v -0.221551 q 0,-0.640917 -0.316502,-0.909943 -0.316502,-0.27694 -1.194795,-0.27694 -0.593441,0 -0.925768,0.237377 -0.332327,0.229464 -0.538054,0.814992 z m 2.975119,1.804062 q -0.427278,0.142426 -1.353046,0.340239 -0.925768,0.197814 -1.21062,0.387715 -0.43519,0.30859 -0.43519,0.783343 0,0.46684 0.348152,0.80708 0.348152,0.340239 0.886205,0.340239 0.601354,0 1.14732,-0.395627 0.40354,-0.300677 0.530141,-0.735867 0.08704,-0.284852 0.08704,-1.08402 z m 4.31234,-4.367727 h 2.073088 v 1.234357 q 0.40354,-0.633004 1.091931,-1.028631 0.688392,-0.395628 1.527122,-0.395628 1.463822,0 2.484541,1.14732 1.020719,1.14732 1.020719,3.19667 0,2.104738 -1.028632,3.275795 -1.028631,1.163145 -2.492453,1.163145 -0.696304,0 -1.266008,-0.276939 -0.561791,-0.276939 -1.186882,-0.949506 v 4.233214 h -2.223426 z m 2.199688,4.059137 q 0,1.416347 0.561791,2.096826 0.561791,0.672567 1.368871,0.672567 0.77543,0 1.289746,-0.617179 0.514316,-0.625092 0.514316,-2.041438 0,-1.321396 -0.530141,-1.962312 -0.530141,-0.640917 -1.313483,-0.640917 -0.814993,0 -1.353046,0.633004 -0.538054,0.625092 -0.538054,1.859449 z"
           id="path2" /><path
           style="color:#000000;-inkscape-font-specification:'Arial Bold';fill:#f83589;stroke-linecap:round;stroke-linejoin:round;-inkscape-stroke:none;paint-order:markers fill stroke"
           d="m 41.236328,9.640625 c -1.628808,0 -2.944887,0.536798 -3.945312,1.611328 -1.000822,1.069662 -1.5,2.57394 -1.5,4.507813 0,1.828539 0.496804,3.273112 1.492187,4.332031 0.995017,1.053237 2.267952,1.582031 3.8125,1.582031 1.247964,0 2.277131,-0.307181 3.087891,-0.921875 0.816226,-0.620119 1.399117,-1.5671 1.748047,-2.835937 a 0.01866307,0.01866307 0 0 0 -0.01172,-0.02148 L 43.648437,17.173828 A 0.01866307,0.01866307 0 0 0 43.625,17.1875 c -0.194619,0.846856 -0.516521,1.465289 -0.960938,1.857422 -0.445165,0.392793 -0.97525,0.589844 -1.59375,0.589844 -0.839416,0 -1.518639,-0.309026 -2.042968,-0.927735 -0.52283,-0.616939 -0.785157,-1.656873 -0.785157,-3.121093 0,-1.37966 0.264693,-2.374366 0.792969,-2.986329 0.534817,-0.613466 1.22862,-0.919921 2.083985,-0.919921 0.618974,0 1.141166,0.172167 1.570312,0.517578 0.434474,0.345484 0.719102,0.816145 0.855469,1.414062 a 0.01866307,0.01866307 0 0 0 0.02344,0.01367 l 2.31836,-0.552734 a 0.01866307,0.01866307 0 0 0 0.01367,-0.02344 C 45.635985,12.118117 45.237638,11.403067 44.707031,10.904297 43.817215,10.06215 42.658987,9.640625 41.236328,9.640625 Z m 0,0.037109 c 1.415305,0 2.562719,0.4185946 3.445313,1.2539066 0.520065,0.488861 0.908804,1.19449 1.171875,2.109375 l -2.28125,0.544922 c -0.139879,-0.594574 -0.423477,-1.071352 -0.859375,-1.417969 -0.435959,-0.350893 -0.967818,-0.525391 -1.59375,-0.525391 -0.864294,0 -1.57004,0.310751 -2.111329,0.931641 -0.53728,0.622393 -0.804687,1.627263 -0.804687,3.011719 0,1.468695 0.264699,2.516563 0.796875,3.144531 0.530677,0.626198 1.22172,0.941406 2.070312,0.941406 0.626408,0 1.167551,-0.201147 1.619141,-0.599609 0.448035,-0.395325 0.764666,-1.02002 0.960938,-1.859375 l 2.238281,0.710937 c -0.347973,1.252925 -0.922417,2.187886 -1.726563,2.798828 -0.803398,0.609113 -1.824557,0.914063 -3.066406,0.914063 -1.536069,0 -2.796763,-0.524088 -3.785156,-1.570313 -0.988027,-1.051092 -1.482422,-2.484861 -1.482422,-4.30664 0,-1.927448 0.497096,-3.420973 1.490234,-4.482422 0.993536,-1.06713 2.297361,-1.5996096 3.917969,-1.5996096 z M -6.0722656,9.8378906 a 0.01866307,0.01866307 0 0 0 -0.017578,0.019531 V 21.457031 a 0.01866307,0.01866307 0 0 0 0.017578,0.01758 h 2.1757812 a 0.01866307,0.01866307 0 0 0 0.019531,-0.01758 v -7.498047 l 4.64062497,7.507813 a 0.01866307,0.01866307 0 0 0 0.0175781,0.0078 h 2.3496094 a 0.01866307,0.01866307 0 0 0 0.017578,-0.01758 V 9.8574219 A 0.01866307,0.01866307 0 0 0 3.1308594,9.8378906 H 0.95507813 a 0.01866307,0.01866307 0 0 0 -0.0195313,0.019531 V 17.537109 L -3.7773438,9.8476563 a 0.01866307,0.01866307 0 0 0 -0.015625,-0.00977 z M -6.0527344,9.875 h 2.25 l 4.74218753,7.738281 a 0.01866307,0.01866307 0 0 0 0.0332031,-0.0098 V 9.875 H 3.1113281 V 21.4375 H 0.79101562 L -3.8808594,13.882813 a 0.01866307,0.01866307 0 0 0 -0.033203,0.0098 V 21.4375 h -2.1386719 z m 15.4570313,2.970703 c -0.8256557,0 -1.5753021,0.181368 -2.2480469,0.546875 -0.6677585,0.365677 -1.1852512,0.89782 -1.5507813,1.591797 -0.3652542,0.693454 -0.546875,1.410774 -0.546875,2.152344 0,0.967675 0.1830887,1.790276 0.5488282,2.46875 0.3657126,0.673122 0.8982336,1.185444 1.5976562,1.535156 0.7040142,0.34936 1.4438309,0.525391 2.2167969,0.525391 1.249071,0 2.284524,-0.419025 3.105469,-1.25586 0.826205,-0.842093 1.240234,-1.904379 1.240234,-3.179687 0,-1.26474 -0.408907,-2.310424 -1.224609,-3.136719 -0.815762,-0.831654 -1.863338,-1.248047 -3.1386721,-1.248047 z m 9.9707031,0 c -0.361813,0 -0.68677,0.09025 -0.974609,0.271485 -0.273647,0.175547 -0.583336,0.548801 -0.921875,1.080078 v -1.144532 a 0.01866307,0.01866307 0 0 0 -0.01758,-0.01758 h -2.066406 a 0.01866307,0.01866307 0 0 0 -0.01758,0.01758 v 8.404297 a 0.01866307,0.01866307 0 0 0 0.01758,0.01758 h 2.22461 a 0.01866307,0.01866307 0 0 0 0.01758,-0.01758 v -2.595703 c 0,-1.429005 0.06162,-2.368949 0.18164,-2.8125 0.126013,-0.446292 0.296462,-0.751059 0.507813,-0.916015 0.21287,-0.171335 0.47155,-0.25586 0.779297,-0.25586 0.317085,0 0.662676,0.11805 1.035156,0.359375 a 0.01866307,0.01866307 0 0 0 0.02734,-0.0078 l 0.6875,-1.939453 a 0.01866307,0.01866307 0 0 0 -0.0078,-0.02149 C 20.375644,12.986493 19.884836,12.845703 19.375,12.845703 Z m 6.923828,0 c -1.00438,0 -1.871842,0.445881 -2.601562,1.316406 v -1.109375 a 0.01866307,0.01866307 0 0 0 -0.01758,-0.01758 h -2.048828 a 0.01866307,0.01866307 0 0 0 -0.01953,0.01758 v 8.404297 a 0.01866307,0.01866307 0 0 0 0.01953,0.01758 h 2.222657 a 0.01866307,0.01866307 0 0 0 0.01758,-0.01758 v -4.083984 c 0,-0.806185 0.05915,-1.382515 0.173828,-1.726563 0.120225,-0.344992 0.315087,-0.606759 0.585937,-0.789062 0.271314,-0.182615 0.576489,-0.273438 0.916016,-0.273438 0.282317,0 0.502754,0.05683 0.662109,0.169922 0.165029,0.113457 0.28708,0.28702 0.365235,0.521485 0.07709,0.231278 0.117187,0.759144 0.117187,1.576171 v 4.605469 a 0.01866307,0.01866307 0 0 0 0.01758,0.01758 h 2.22461 a 0.01866307,0.01866307 0 0 0 0.01758,-0.01758 v -4.035156 c 0,-0.790301 0.0616,-1.366434 0.18164,-1.726562 a 0.01866307,0.01866307 0 0 0 0,-0.002 c 0.120321,-0.36619 0.315232,-0.640713 0.585938,-0.828125 0.271586,-0.188021 0.56171,-0.28125 0.869141,-0.28125 0.42267,0 0.731085,0.155245 0.933593,0.466797 0.147495,0.23494 0.226563,0.772197 0.226563,1.603516 v 4.802734 a 0.01866307,0.01866307 0 0 0 0.01758,0.01758 h 2.224609 a 0.01866307,0.01866307 0 0 0 0.01758,-0.01758 v -5.373047 c 0,-0.802991 -0.07552,-1.38473 -0.230468,-1.748046 -0.212374,-0.488461 -0.534148,-0.859466 -0.964844,-1.109375 -0.430667,-0.255211 -0.956441,-0.38086 -1.576172,-0.38086 -0.488142,0 -0.949065,0.111104 -1.378906,0.333985 -0.424202,0.219957 -0.817187,0.55507 -1.183594,0.996093 -0.252949,-0.44093 -0.571891,-0.776039 -0.964844,-0.996093 -0.398773,-0.223314 -0.869542,-0.333985 -1.410156,-0.333985 z m 24.892578,0 c -1.094154,0 -1.921871,0.194212 -2.480469,0.587891 -0.55788,0.393173 -0.950058,0.999055 -1.177734,1.814453 a 0.01866307,0.01866307 0 0 0 0.01563,0.02344 l 2.017578,0.363282 a 0.01866307,0.01866307 0 0 0 0.01953,-0.01172 c 0.136363,-0.388106 0.314325,-0.654906 0.53125,-0.804688 0.217276,-0.155197 0.522877,-0.234375 0.916016,-0.234375 0.583567,0 0.977077,0.09249 1.181641,0.271485 0.205429,0.174614 0.310547,0.472278 0.310547,0.896484 v 0.208985 c -0.399299,0.166794 -1.111636,0.345067 -2.144532,0.539062 -0.771083,0.147879 -1.363392,0.323722 -1.777343,0.525391 -0.409155,0.196607 -0.728392,0.483808 -0.957032,0.861328 -0.228693,0.372291 -0.34375,0.797666 -0.34375,1.27539 0,0.721703 0.250702,1.320229 0.75,1.792969 0.505038,0.473141 1.19402,0.710938 2.0625,0.710938 0.492919,0 0.957684,-0.09367 1.392578,-0.279297 0.427068,-0.182285 0.825838,-0.457625 1.201172,-0.81836 0.01572,0.04467 0.03679,0.116611 0.07031,0.236328 0.08448,0.290413 0.156422,0.509498 0.214844,0.658204 a 0.01866307,0.01866307 0 0 0 0.01758,0.01172 h 2.199218 a 0.01866307,0.01866307 0 0 0 0.01758,-0.02539 c -0.194651,-0.399824 -0.328884,-0.772831 -0.402344,-1.119141 -0.06811,-0.351041 -0.103516,-0.896839 -0.103516,-1.634766 l 0.02344,-2.595703 c 0,-0.966622 -0.09881,-1.629216 -0.302735,-1.99414 -0.19744,-0.368198 -0.541448,-0.669025 -1.029297,-0.902344 -0.489809,-0.239581 -1.229462,-0.357422 -2.222656,-0.357422 z m 10.357422,0 c -0.562087,0 -1.075343,0.131101 -1.537109,0.396485 -0.446505,0.256611 -0.794571,0.59592 -1.0625,1.001953 v -1.191407 a 0.01866307,0.01866307 0 0 0 -0.01953,-0.01758 h -2.072265 a 0.01866307,0.01866307 0 0 0 -0.01953,0.01758 v 11.601563 a 0.01866307,0.01866307 0 0 0 0.01953,0.01758 h 2.222656 a 0.01866307,0.01866307 0 0 0 0.01953,-0.01758 v -4.19336 c 0.404849,0.42961 0.791404,0.744965 1.158203,0.925782 a 0.01866307,0.01866307 0 0 0 0.002,0 c 0.38249,0.185932 0.806761,0.279297 1.273437,0.279297 0.980823,0 1.817196,-0.391202 2.505859,-1.169922 0.689413,-0.784869 1.033204,-1.882865 1.033204,-3.289063 0,-1.36933 -0.341245,-2.439982 -1.025391,-3.208984 -0.683423,-0.768189 -1.517291,-1.152344 -2.498047,-1.152344 z m -52.1445311,0.03711 c 1.2672291,0 2.3043341,0.411622 3.1132811,1.236328 0.809007,0.819513 1.212891,1.854604 1.212891,3.111328 0,1.267255 -0.408912,2.316979 -1.228516,3.152343 -0.814313,0.830075 -1.839336,1.246094 -3.080078,1.246094 -0.7673421,0 -1.5020288,-0.174541 -2.2011719,-0.521484 -0.6931846,-0.346593 -1.21979,-0.852798 -1.5820312,-1.519531 -0.3622143,-0.671935 -0.5429688,-1.488188 -0.5429688,-2.451172 0,-0.735438 0.1802693,-1.448116 0.5429688,-2.136719 0.3624238,-0.68808 0.875561,-1.211942 1.5371093,-1.574219 0.6666862,-0.361848 1.4090407,-0.542968 2.2285157,-0.542968 z m 9.9707031,0 c 0.497618,0 0.97711,0.139933 1.439453,0.412109 l -0.675781,1.902344 c -0.367858,-0.234126 -0.713422,-0.357422 -1.033203,-0.357422 -0.314706,0 -0.583052,0.08685 -0.802735,0.263672 -0.221201,0.172644 -0.392341,0.485084 -0.519531,0.935546 -0.122631,0.453205 -0.183594,1.392206 -0.183594,2.822266 V 21.4375 h -2.185546 v -8.365234 h 2.027343 v 1.175781 a 0.01866307,0.01866307 0 0 0 0.03516,0.0098 c 0.352725,-0.563306 0.668264,-0.932899 0.94336,-1.109375 0.281862,-0.17747 0.599486,-0.265625 0.955078,-0.265625 z m 6.923828,0 c 0.535492,0 0.998145,0.110289 1.390625,0.330078 0.392425,0.219758 0.714995,0.552147 0.966797,0.998047 a 0.01866307,0.01866307 0 0 0 0.03125,0.002 c 0.367966,-0.446815 0.76284,-0.779805 1.1875,-1 0.424714,-0.220222 0.878866,-0.330079 1.361328,-0.330078 0.614627,0 1.132754,0.12576 1.556641,0.376953 0.423859,0.245943 0.739591,0.609653 0.949218,1.091797 0.151008,0.354086 0.228516,0.931804 0.228516,1.732421 V 21.4375 h -2.185547 v -4.783203 c 0,-0.834596 -0.0743,-1.374195 -0.232422,-1.625 -0.208943,-0.321451 -0.532958,-0.482422 -0.964843,-0.482422 -0.315022,0 -0.613608,0.09533 -0.890625,0.287109 -0.277897,0.192391 -0.477278,0.477297 -0.59961,0.84961 -0.122334,0.367885 -0.183593,0.946952 -0.183594,1.738281 V 21.4375 h -2.185546 v -4.585938 c 0,-0.818231 -0.03798,-1.344416 -0.119141,-1.58789 -0.0799,-0.239705 -0.206973,-0.420406 -0.378906,-0.539063 -0.167697,-0.119011 -0.396208,-0.177734 -0.683594,-0.177734 -0.346226,0 -0.658257,0.09266 -0.935547,0.279297 -0.277751,0.186948 -0.479136,0.457283 -0.601562,0.808594 -0.117419,0.352255 -0.175782,0.930307 -0.175782,1.738281 V 21.4375 h -2.185547 v -8.365234 h 2.011719 v 1.128906 a 0.01866307,0.01866307 0 0 0 0.0332,0.01172 c 0.730551,-0.888225 1.598139,-1.330078 2.605469,-1.330078 z m 24.892578,0 c 0.990216,0 1.726236,0.118343 2.207031,0.353515 0.482756,0.230883 0.818806,0.526963 1.011719,0.886719 a 0.01866307,0.01866307 0 0 0 0.002,0 c 0.196973,0.352479 0.296875,1.012524 0.296875,1.976562 l -0.02344,2.595703 c 0,0.739082 0.03448,1.284813 0.103515,1.640625 a 0.01866307,0.01866307 0 0 0 0,0.002 c 0.07244,0.341506 0.206446,0.708611 0.394532,1.099609 h -2.158203 c -0.05707,-0.146598 -0.126182,-0.357941 -0.208985,-0.642578 -0.03697,-0.132045 -0.06369,-0.218005 -0.08008,-0.261719 a 0.01866307,0.01866307 0 0 0 -0.03125,-0.0078 c -0.378378,0.367867 -0.782656,0.642535 -1.212891,0.826171 -0.430209,0.183626 -0.888716,0.277344 -1.376953,0.277344 -0.861728,0 -1.539891,-0.233404 -2.037109,-0.699219 -0.492407,-0.466214 -0.738281,-1.054474 -0.738281,-1.767578 0,-0.471781 0.112931,-0.889647 0.33789,-1.255859 0.225014,-0.371534 0.538207,-0.653911 0.941407,-0.847656 0.408538,-0.199032 0.999499,-0.374059 1.767578,-0.521485 1.039711,-0.195275 1.760216,-0.376834 2.164062,-0.546875 a 0.01866307,0.01866307 0 0 0 0.01172,-0.01758 v -0.220703 c 0,-0.430349 -0.105693,-0.739741 -0.322266,-0.923828 -0.217439,-0.19026 -0.619541,-0.28125 -1.207031,-0.28125 -0.398115,0 -0.711674,0.07893 -0.9375,0.240234 -0.222333,0.153516 -0.398123,0.428538 -0.535156,0.810547 l -1.978516,-0.357422 c 0.226914,-0.797152 0.605951,-1.39169 1.150391,-1.77539 0.549157,-0.387026 1.369277,-0.582031 2.458984,-0.582031 z m 10.357422,0 c 0.971005,0 1.793169,0.379055 2.470703,1.140625 0.676811,0.760756 1.015625,1.820459 1.015625,3.183593 0,1.400117 -0.341342,2.487133 -1.023437,3.263672 -0.682843,0.772139 -1.507578,1.158203 -2.478516,1.158203 -0.461728,0 -0.880699,-0.09207 -1.257812,-0.27539 -0.371616,-0.183191 -0.765942,-0.498042 -1.181641,-0.945313 a 0.01866307,0.01866307 0 0 0 -0.0332,0.01172 v 4.214844 H 56.875 v -11.5625 h 2.035156 v 1.214843 a 0.01866307,0.01866307 0 0 0 0.03516,0.01172 c 0.267389,-0.419432 0.629373,-0.761044 1.085938,-1.023437 0.456089,-0.262121 0.96136,-0.392578 1.517578,-0.392578 z m -0.601562,1.71875 c -0.54816,0 -1.005475,0.213126 -1.367188,0.638671 -0.362664,0.421331 -0.542969,1.047432 -0.542969,1.873047 0,0.946698 0.187833,1.648868 0.566407,2.107422 0.377345,0.451752 0.839576,0.679688 1.382812,0.679688 0.521904,0 0.958858,-0.208052 1.304688,-0.623047 0.34727,-0.422068 0.519531,-1.108199 0.519531,-2.054688 0,-0.883425 -0.177715,-1.540526 -0.535156,-1.972656 -0.356305,-0.430756 -0.800808,-0.648437 -1.328125,-0.648437 z m 0,0.03711 c 0.517138,0 0.948278,0.210966 1.298828,0.634766 0.349412,0.422423 0.52539,1.070784 0.52539,1.949218 0,0.941971 -0.171282,1.619863 -0.509765,2.03125 -0.339924,0.407909 -0.763389,0.609375 -1.275391,0.609375 -0.532869,0 -0.981807,-0.221012 -1.353516,-0.666015 -0.37048,-0.448751 -0.558593,-1.142222 -0.558593,-2.083985 0,-0.820192 0.180416,-1.435531 0.535156,-1.847656 0.35569,-0.41846 0.799394,-0.626953 1.337891,-0.626953 z M 9.4121094,14.65625 c -0.5850032,0 -1.0779167,0.225392 -1.4765625,0.671875 -0.3994985,0.447438 -0.5976563,1.091327 -0.5976563,1.927734 0,0.836408 0.1981578,1.478343 0.5976563,1.925782 0.3986458,0.446483 0.8915593,0.671875 1.4765625,0.671875 0.5850031,0 1.0773186,-0.225332 1.4707036,-0.671875 0.399547,-0.447493 0.597656,-1.094486 0.597656,-1.941407 0,-0.825895 -0.198207,-1.464726 -0.597656,-1.912109 C 10.489428,14.881581 9.9971125,14.65625 9.4121094,14.65625 Z m 0,0.03906 c 0.5755029,-1e-6 1.0560386,0.218542 1.4433596,0.658203 0.391804,0.438821 0.58789,1.066804 0.58789,1.886718 0,0.841089 -0.196184,1.479258 -0.58789,1.917969 -0.387321,0.439661 -0.8678567,0.658203 -1.4433596,0.658203 -0.5755029,0 -1.0566104,-0.218482 -1.4492188,-0.658203 C 7.5711349,18.719437 7.375,18.086361 7.375,17.255859 c 0,-0.830501 0.1961349,-1.463577 0.5878906,-1.902343 0.3926084,-0.439722 0.8737159,-0.658203 1.4492188,-0.658203 z m 43.1269526,2.708984 c -0.283474,0.09449 -0.734705,0.208037 -1.351562,0.339844 -0.617989,0.132049 -1.021621,0.258554 -1.216797,0.388671 a 0.01866307,0.01866307 0 0 0 0,0.002 c -0.29381,0.208338 -0.443359,0.476624 -0.443359,0.798828 0,0.315865 0.118363,0.590504 0.353515,0.820312 0.235538,0.230185 0.535803,0.34375 0.898438,0.34375 0.404994,0 0.79159,-0.132776 1.158203,-0.398437 0.271736,-0.20247 0.451545,-0.451968 0.537109,-0.746094 0.05945,-0.194565 0.08789,-0.554435 0.08789,-1.087891 v -0.443359 a 0.01866307,0.01866307 0 0 0 -0.02344,-0.01758 z m -0.01367,0.04102 v 0.419922 c 0,0.532101 -0.02934,0.892889 -0.08594,1.078125 -0.08324,0.286127 -0.25712,0.52813 -0.523437,0.726563 -0.361341,0.261841 -0.739909,0.390625 -1.136719,0.390625 -0.354768,0 -0.644383,-0.110517 -0.873047,-0.333985 -0.22905,-0.223844 -0.341797,-0.486381 -0.341797,-0.792968 0,-0.3108 0.141292,-0.566417 0.427734,-0.769532 0.184997,-0.122923 0.587665,-0.253256 1.203125,-0.384765 0.605987,-0.129484 1.043145,-0.239694 1.330079,-0.333985 z"
           id="path3" /></g></g></g><script
     id="script1169"
     type="text/javascript">&#10;!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();&#10;</script></svg>
