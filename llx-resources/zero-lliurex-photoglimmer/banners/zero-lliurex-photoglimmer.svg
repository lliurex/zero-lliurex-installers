<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="235"
   height="110"
   viewBox="0 0 62.177082 29.104167"
   version="1.1"
   id="svg900"
   inkscape:version="1.3 (1:1.3+202307231459+0e150ed6c4)"
   sodipodi:docname="zero-lliurex-photoglimmer.svg"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview902"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:document-units="mm"
     showgrid="false"
     units="px"
     inkscape:zoom="2.0000001"
     inkscape:cx="194.24999"
     inkscape:cy="65.499998"
     inkscape:window-width="1920"
     inkscape:window-height="882"
     inkscape:window-x="0"
     inkscape:window-y="0"
     inkscape:window-maximized="1"
     inkscape:current-layer="g1055"
     inkscape:showpageshadow="2"
     inkscape:deskcolor="#d1d1d1" />
  <defs
     id="defs897">
    <linearGradient
       id="linearGradient6"
       inkscape:collect="always">
      <stop
         style="stop-color:#e58e00;stop-opacity:1;"
         offset="0"
         id="stop7" />
      <stop
         style="stop-color:#e58e00;stop-opacity:0;"
         offset="1"
         id="stop8" />
    </linearGradient>
    <linearGradient
       id="linearGradient4689">
      <stop
         style="stop-color:#5a9fd4;stop-opacity:1;"
         offset="0"
         id="stop4691" />
      <stop
         style="stop-color:#306998;stop-opacity:1;"
         offset="1"
         id="stop4693" />
    </linearGradient>
    <linearGradient
       id="linearGradient4671">
      <stop
         style="stop-color:#ffd43b;stop-opacity:1;"
         offset="0"
         id="stop4673" />
      <stop
         style="stop-color:#ffe873;stop-opacity:1"
         offset="1"
         id="stop4675" />
    </linearGradient>
    <linearGradient
       id="a"
       gradientUnits="userSpaceOnUse"
       x1="48"
       x2="48"
       y1="88"
       y2="48">
      <stop
         offset="0"
         stop-color="#b6d1f2"
         id="stop1" />
      <stop
         offset="1"
         stop-color="#e9eef4"
         id="stop2" />
    </linearGradient>
    <filter
       inkscape:collect="always"
       style="color-interpolation-filters:sRGB"
       id="filter1"
       x="-0.014408751"
       y="-0.01463298"
       width="1.0288175"
       height="1.029266">
      <feGaussianBlur
         inkscape:collect="always"
         stdDeviation="0.12076436"
         id="feGaussianBlur1" />
    </filter>
    <linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient6"
       id="linearGradient8"
       x1="71.030525"
       y1="52.691418"
       x2="140.21904"
       y2="52.691418"
       gradientUnits="userSpaceOnUse" />
  </defs>
  <g
     inkscape:label="Capa 1"
     inkscape:groupmode="layer"
     id="layer1">
    <g
       id="g1055"
       transform="translate(-73.918747,-37.647919)">
      <rect
         style="fill:url(#linearGradient8);stroke-width:0.251883;fill-opacity:1"
         id="rect416"
         width="69.188515"
         height="33.470203"
         x="71.030525"
         y="35.956314" />
      <g
         id="g12"
         transform="translate(-7.1434189,19.843225)">
        <g
           id="g1"
           transform="matrix(0.95953634,0,0,0.95953634,17.911088,-19.269891)">
          <path
             style="opacity:0.67;fill:#000000;stroke:none;stroke-width:0.0404075;filter:url(#filter1)"
             d="m 126.40322,52.477891 h -0.0406 l -0.44447,-0.202032 c 0.0171,-0.12994 -0.0301,-0.145462 -0.16156,-0.121215 0.0635,-0.200224 -0.29419,-0.505766 -0.48492,-0.565681 l 0.0407,-0.121213 -0.12119,-0.04044 c 0.0838,-0.06704 0.1146,-0.05788 0,-0.08081 v -0.04045 l 0.20199,-0.08083 0.96976,1.171762 c 0.28364,-0.390014 -0.43147,-0.523146 -0.51852,-0.808111 -0.0731,-0.239263 -0.008,-0.597716 -0.008,-0.84852 v -1.858654 -2.666774 c 0,-1.113311 -0.0105,-2.240151 -0.88895,-3.064102 -1.13473,-1.064928 -2.68628,-0.855252 -4.1214,-0.855252 h -9.49545 c -1.53562,0 -3.11316,-0.200564 -4.24258,1.050545 -0.99691,1.104212 -0.72735,2.79016 -0.72735,4.161786 v 9.616561 c 0,1.477358 -0.20104,3.108751 1.0102,4.202195 1.09766,0.99095 2.71458,0.727311 4.08093,0.727311 h 9.49536 c 1.3565,0 3.00953,0.245986 4.04059,-0.848521 1.14883,-1.219502 0.84847,-3.067563 0.84847,-4.606253 0,-0.753179 0.0826,-1.557392 0.0206,-2.30313 -0.0114,-0.138912 -0.15491,-0.259701 -0.15491,-0.390588 0,-0.316384 0.55315,-0.277657 0.68013,-0.464664 0.12312,-0.181177 0.0205,-0.742799 0.0205,-0.962999 m -1.7777,6.78816 c -0.1892,-0.06715 -0.31909,-0.364025 -0.43779,-0.52528 -0.38392,-0.521654 -0.7733,-1.039888 -1.13809,-1.575821 -0.40967,-0.602076 -0.83958,-1.187437 -1.26597,-1.77785 -0.37776,-0.522917 -0.65849,-0.818413 -0.5927,-1.495012 0.091,-0.936715 1.14378,-1.597068 1.60276,-2.383928 0.16276,-0.278934 0.30507,-0.644578 0.33666,-0.969742 0.0263,-0.268111 -0.0657,-0.58948 0.0135,-0.848522 0.14603,-0.477901 0.38099,-0.899898 0.43096,-1.414196 0.0934,-0.961999 -0.2869,-2.035967 -0.92939,-2.747591 -0.89001,-0.985828 -2.2652,-1.553364 -3.59613,-1.239111 -1.97757,0.466921 -3.37439,2.567643 -2.74764,4.552374 l 0.72722,-0.323246 c -0.0943,-0.512153 -0.0777,-1.121 0.0941,-1.616222 0.67819,-1.953068 3.12694,-2.371692 4.6332,-1.158297 0.33166,0.267104 0.58246,0.658859 0.76103,1.037084 0.33409,0.707509 0.3131,1.584383 0.0336,2.30312 -0.0967,0.248541 -0.32504,0.479004 -0.39056,0.727302 -0.0595,0.22607 0.17056,0.29909 0.20201,0.48487 0.0518,0.308093 -0.10223,0.712425 -0.25594,0.969734 -0.5856,0.980546 -1.64311,1.466002 -1.64311,2.707182 l -1.091,-0.404046 c 0.0237,-0.301423 0.0178,-0.863093 0.14141,-1.131362 0.1879,-0.409955 0.69059,-0.759352 0.98991,-1.09095 0.17321,-0.191829 0.53629,-0.795675 0.84858,-0.585883 0.39914,0.26817 -0.46312,0.948368 -0.64655,1.151559 -0.0694,0.0768 -0.31446,0.417522 -0.0406,0.417522 0.14215,0 0.34911,-0.322189 0.44446,-0.417522 0.30274,-0.302763 0.48289,-0.577037 0.66667,-0.929329 0.0679,-0.130026 0.22008,-0.179577 0.28284,-0.323245 0.12547,-0.287465 -0.16507,-0.659359 -0.46467,-0.680164 -0.27594,-0.01917 -0.44404,0.268612 -0.60608,0.437728 -0.35553,0.370994 -0.68753,0.768331 -1.05059,1.131363 -0.14154,0.141498 -0.24941,0.347574 -0.44453,0.404052 0.04,-0.138365 0.12869,-0.626917 -0.0473,-0.707096 -0.12167,-0.05546 -0.68193,0.333627 -0.72736,0.451191 -0.14483,0.375392 0.0304,0.907587 -0.0473,1.306456 -0.2177,1.119642 -0.50712,2.231399 -0.71385,3.353675 l -0.76773,0.121216 c -0.14928,-0.378084 -0.64557,-0.728332 -1.0506,-0.76771 -0.13432,-0.01305 -0.40353,0.09663 -0.51176,0.02019 -0.17178,-0.121245 -0.29749,-0.457609 -0.43101,-0.626283 -0.34405,-0.434588 -0.79183,-0.853684 -1.27951,-1.12463 -0.34864,-0.193688 -0.70126,-0.36989 -1.09094,-0.478136 -0.10642,-0.02955 -0.35601,-0.02018 -0.39737,-0.13468 -0.0289,-0.0794 -0.008,-0.199104 -0.008,-0.282837 0,-0.963336 1.14501,-0.390556 1.69706,-0.888932 0.55201,-0.498355 0.40406,-1.306609 0.40406,-1.979871 1.12362,-0.08872 0.29041,-1.391301 0.0941,-1.979879 -0.16396,-0.491742 -0.045,-0.98784 -0.0943,-1.495002 -0.0931,-0.959017 -0.85779,-1.931775 -1.7778,-2.222311 v -0.0808 c 0.57671,-0.364266 1.43294,-0.838931 2.10105,-0.996681 0.3323,-0.07845 0.74959,-0.01347 1.09099,-0.01347 h 2.26268 c 1.00566,0 2.02458,-0.09779 3.03044,0 0.45368,0.04406 0.92015,-0.04406 1.37381,0 0.79379,0.07719 1.50475,0.679455 1.85197,1.373797 0.23613,0.472363 0.16836,1.024086 0.16836,1.535412 v 2.74759 10.182239 M 112.30132,45.245264 c -0.35196,0.607931 -1.27061,0.811497 -1.52199,1.53542 -0.26466,0.762341 0.13778,1.430857 0.14821,2.181906 0.007,0.397611 -0.0384,0.793546 -0.40405,1.037076 -0.16943,0.112949 -0.38002,0.08094 -0.5657,0.134691 0.0226,-0.282529 0.26628,-0.510214 0.28283,-0.808113 0.0374,-0.678937 -0.6988,-0.645362 -1.13133,-0.565683 0.18296,-0.316045 0.41019,-0.563606 0.51177,-0.929335 0.12448,-0.448195 -0.0468,-0.910584 0.10778,-1.373787 0.3224,-0.967401 1.59779,-1.6995 2.57248,-1.212175 m 1.97987,4.363817 c -0.12273,0 -0.33517,-0.04127 -0.44445,0.0202 -0.16653,0.09368 -0.12121,0.347307 -0.12121,0.505074 0,0.360324 0.13636,1.078553 -0.0942,1.373795 -0.24869,0.318286 -0.82167,0.09561 -1.15833,0.175091 -0.80173,0.189297 -0.88894,1.003761 -0.88894,1.683572 -0.47678,0.03765 -0.97868,0.112248 -1.41419,0.329973 -0.18679,0.0934 -0.36839,0.292651 -0.56562,0.350185 -0.29523,0.08611 -0.97943,-0.120681 -1.25265,-0.235695 0.35388,-0.562981 1.30128,-0.775996 1.77788,-1.252581 0.3309,-0.330876 0.21801,-0.751901 0.42428,-1.084223 0.0751,-0.121144 0.3099,-0.212525 0.42428,-0.303038 0.22064,-0.174695 0.38832,-0.426706 0.51851,-0.673428 0.30348,-0.575006 0.39968,-1.263497 0.27614,-1.899069 -0.0793,-0.409181 -0.30181,-0.959589 -0.21553,-1.373793 0.14081,-0.675855 1.01394,-1.112284 1.40068,-1.656633 1.07433,0.310984 0.63152,1.906442 0.82166,2.666784 0.1181,0.47262 0.4122,0.900723 0.51177,1.37379 m 10.9769,1.48154 -0.0135,0.02694 0.0135,-0.02694 m 0.0134,0.134689 -0.0406,0.04045 0.0406,-0.04045 m 0,0.242435 -0.0406,0.04044 0.0406,-0.04044 m 0.48488,0.565678 -0.0406,0.04045 0.0406,-0.04045 m 0.1212,0.175091 c 0.0312,0 0.007,0.02011 -0.0135,0.01346 l 0.0135,-0.01346 m -0.28281,0.309775 -0.0407,0.04045 0.0407,-0.04045 m -14.02086,1.663375 c 1.36846,-0.209068 2.83693,0.928694 3.38733,2.094359 0.29515,0.62489 0.37554,1.313515 0.50512,1.979881 0.0854,0.439555 0.14528,0.888246 0.18857,1.333385 0.0129,0.133647 0.0928,0.313494 0.0203,0.444464 -0.07,0.126212 -0.26421,0.18935 -0.38385,0.249168 -0.40905,0.204564 -0.86969,0.392656 -1.33337,0.437728 -1.64272,0.159713 -3.23265,-0.357653 -4.22911,-1.737451 -0.85328,-1.181424 -0.911,-3.132686 0.22894,-4.161785 0.45027,-0.406477 1.03676,-0.551228 1.6162,-0.639749 m 9.41456,4.76114 h -0.0406 c -0.22818,-1.238952 -1.20369,-1.872675 -2.18189,-2.464752 l 0.44448,-2.101094 c 0.97465,0.07693 1.69266,1.16134 2.03374,1.979881 0.0913,0.219328 0.35208,0.640954 0.26262,0.888923 -0.10988,0.304787 -0.63161,-0.25324 -0.70037,0.08083 -0.0307,0.150752 0.0915,0.37937 0.12798,0.525272 0.084,0.336199 0.15187,0.752243 0.0538,1.09096 m 5.0507,-4.323416 0.16162,0.404058 h 0.0407 l -0.20207,-0.404061 m 0.20206,0.444462 0.0406,0.04044 -0.0406,-0.04044 m 0.0406,0.08082 0.0809,0.28284 h 0.0406 l -0.12105,-0.282846 m -8.2025,5.697199 h -1.17177 c 0,-1.019941 -0.39295,-2.148593 -0.71382,-3.111234 -0.0705,-0.210849 -0.45336,-0.934558 -0.31651,-1.124627 0.0638,-0.08795 0.25818,-0.04982 0.3434,-0.02019 0.29736,0.103234 0.48404,0.485273 0.63305,0.740771 0.57956,0.99353 1.01696,2.382381 1.22564,3.515285 m -0.24252,-3.62977 c 0.97591,-0.149096 1.73775,0.842718 2.00681,1.649898 0.12149,0.364545 0.39318,1.1113 -0.14814,1.239111 -0.43453,0.102595 -1.50854,-0.256463 -1.75766,-0.633028 -0.15088,-0.22807 -0.20847,-0.626986 -0.30312,-0.888921 -0.0834,-0.230874 -0.50776,-0.952138 -0.38378,-1.171767 0.0877,-0.155124 0.4308,-0.171597 0.58589,-0.195293 z"
             id="path1-3" />
          <path
             style="fill:#d4aa00;stroke:none;stroke-width:0.0404075"
             d="m 126.02596,52.122096 h -0.0406 l -0.44447,-0.202032 c 0.0171,-0.12994 -0.0301,-0.145462 -0.16156,-0.121215 0.0635,-0.200224 -0.29419,-0.505766 -0.48492,-0.565681 l 0.0407,-0.121213 -0.12119,-0.04044 c 0.0838,-0.06704 0.1146,-0.05788 0,-0.08081 v -0.04045 l 0.20199,-0.08083 0.96976,1.171762 c 0.28364,-0.390014 -0.43147,-0.523146 -0.51852,-0.808111 -0.0731,-0.239263 -0.008,-0.597716 -0.008,-0.84852 v -1.858654 -2.666774 c 0,-1.113311 -0.0105,-2.240151 -0.88895,-3.064102 -1.13473,-1.064928 -2.68628,-0.855252 -4.1214,-0.855252 h -9.49545 c -1.53562,0 -3.11316,-0.200564 -4.24258,1.050545 -0.99691,1.104212 -0.72735,2.79016 -0.72735,4.161786 v 9.616561 c 0,1.477358 -0.20104,3.108751 1.0102,4.202195 1.09766,0.99095 2.71458,0.727311 4.08093,0.727311 h 9.49536 c 1.3565,0 3.00953,0.245986 4.04059,-0.848521 1.14883,-1.219502 0.84847,-3.067563 0.84847,-4.606253 0,-0.753179 0.0826,-1.557392 0.0206,-2.30313 -0.0114,-0.138912 -0.15491,-0.259701 -0.15491,-0.390588 0,-0.316384 0.55315,-0.277657 0.68013,-0.464664 0.12312,-0.181177 0.0205,-0.742799 0.0205,-0.962999 m -1.7777,6.78816 c -0.1892,-0.06715 -0.31909,-0.364025 -0.43779,-0.52528 -0.38392,-0.521654 -0.7733,-1.039888 -1.13809,-1.575821 -0.40967,-0.602076 -0.83958,-1.187437 -1.26597,-1.77785 -0.37776,-0.522917 -0.65849,-0.818413 -0.5927,-1.495012 0.091,-0.936715 1.14378,-1.597068 1.60276,-2.383928 0.16276,-0.278934 0.30507,-0.644578 0.33666,-0.969742 0.0263,-0.268111 -0.0657,-0.58948 0.0135,-0.848522 0.14603,-0.477901 0.38099,-0.899898 0.43096,-1.414196 0.0934,-0.961999 -0.2869,-2.035967 -0.92939,-2.747591 -0.89001,-0.985828 -2.2652,-1.553364 -3.59613,-1.239111 -1.97757,0.466921 -3.37439,2.567643 -2.74764,4.552374 l 0.72722,-0.323246 c -0.0943,-0.512153 -0.0777,-1.121 0.0941,-1.616222 0.67819,-1.953068 3.12694,-2.371692 4.6332,-1.158297 0.33166,0.267104 0.58246,0.658859 0.76103,1.037084 0.33409,0.707509 0.3131,1.584383 0.0336,2.30312 -0.0967,0.248541 -0.32504,0.479004 -0.39056,0.727302 -0.0595,0.22607 0.17056,0.29909 0.20201,0.48487 0.0518,0.308093 -0.10223,0.712425 -0.25594,0.969734 -0.5856,0.980546 -1.64311,1.466002 -1.64311,2.707182 l -1.091,-0.404046 c 0.0237,-0.301423 0.0178,-0.863093 0.14141,-1.131362 0.1879,-0.409955 0.69059,-0.759352 0.98991,-1.09095 0.17321,-0.191829 0.53629,-0.795675 0.84858,-0.585883 0.39914,0.26817 -0.46312,0.948368 -0.64655,1.151559 -0.0694,0.0768 -0.31446,0.417522 -0.0406,0.417522 0.14215,0 0.34911,-0.322189 0.44446,-0.417522 0.30274,-0.302763 0.48289,-0.577037 0.66667,-0.929329 0.0679,-0.130026 0.22008,-0.179577 0.28284,-0.323245 0.12547,-0.287465 -0.16507,-0.659359 -0.46467,-0.680164 -0.27594,-0.01917 -0.44404,0.268612 -0.60608,0.437728 -0.35553,0.370994 -0.68753,0.768331 -1.05059,1.131363 -0.14154,0.141498 -0.24941,0.347574 -0.44453,0.404052 0.04,-0.138365 0.12869,-0.626917 -0.0473,-0.707096 -0.12167,-0.05546 -0.68193,0.333627 -0.72736,0.451191 -0.14483,0.375392 0.0304,0.907587 -0.0473,1.306456 -0.2177,1.119642 -0.50712,2.231399 -0.71385,3.353675 l -0.76773,0.121216 c -0.14928,-0.378084 -0.64557,-0.728332 -1.0506,-0.76771 -0.13432,-0.01305 -0.40353,0.09663 -0.51176,0.02019 -0.17178,-0.121245 -0.29749,-0.457609 -0.43101,-0.626283 -0.34405,-0.434588 -0.79183,-0.853684 -1.27951,-1.12463 -0.34864,-0.193688 -0.70126,-0.36989 -1.09094,-0.478136 -0.10642,-0.02955 -0.35601,-0.02018 -0.39737,-0.13468 -0.0289,-0.0794 -0.008,-0.199104 -0.008,-0.282837 0,-0.963336 1.14501,-0.390556 1.69706,-0.888932 0.55201,-0.498355 0.40406,-1.306609 0.40406,-1.979871 1.12362,-0.08872 0.29041,-1.391301 0.0941,-1.979879 -0.16396,-0.491742 -0.045,-0.98784 -0.0943,-1.495002 -0.0931,-0.959017 -0.85779,-1.931775 -1.7778,-2.222311 v -0.0808 c 0.57671,-0.364266 1.43294,-0.838931 2.10105,-0.996681 0.3323,-0.07845 0.74959,-0.01347 1.09099,-0.01347 h 2.26268 c 1.00566,0 2.02458,-0.09779 3.03044,0 0.45368,0.04406 0.92015,-0.04406 1.37381,0 0.79379,0.07719 1.50475,0.679455 1.85197,1.373797 0.23613,0.472363 0.16836,1.024086 0.16836,1.535412 v 2.74759 10.182239 M 111.92406,44.889469 c -0.35196,0.607931 -1.27061,0.811497 -1.52199,1.53542 -0.26466,0.762341 0.13778,1.430857 0.14821,2.181906 0.007,0.397611 -0.0384,0.793546 -0.40405,1.037076 -0.16943,0.112949 -0.38002,0.08094 -0.5657,0.134691 0.0226,-0.282529 0.26628,-0.510214 0.28283,-0.808113 0.0374,-0.678937 -0.6988,-0.645362 -1.13133,-0.565683 0.18296,-0.316045 0.41019,-0.563606 0.51177,-0.929335 0.12448,-0.448195 -0.0468,-0.910584 0.10778,-1.373787 0.3224,-0.967401 1.59779,-1.6995 2.57248,-1.212175 m 1.97987,4.363817 c -0.12273,0 -0.33517,-0.04127 -0.44445,0.0202 -0.16653,0.09368 -0.12121,0.347307 -0.12121,0.505074 0,0.360324 0.13636,1.078553 -0.0942,1.373795 -0.24869,0.318286 -0.82167,0.09561 -1.15833,0.175091 -0.80173,0.189297 -0.88894,1.003761 -0.88894,1.683572 -0.47678,0.03765 -0.97868,0.112248 -1.41419,0.329973 -0.18679,0.0934 -0.36839,0.292651 -0.56562,0.350185 -0.29523,0.08611 -0.97943,-0.120681 -1.25265,-0.235695 0.35388,-0.562981 1.30128,-0.775996 1.77788,-1.252581 0.3309,-0.330876 0.21801,-0.751901 0.42428,-1.084223 0.0751,-0.121144 0.3099,-0.212525 0.42428,-0.303038 0.22064,-0.174695 0.38832,-0.426706 0.51851,-0.673428 0.30348,-0.575006 0.39968,-1.263497 0.27614,-1.899069 -0.0793,-0.409181 -0.30181,-0.959589 -0.21553,-1.373793 0.14081,-0.675855 1.01394,-1.112284 1.40068,-1.656633 1.07433,0.310984 0.63152,1.906442 0.82166,2.666784 0.1181,0.47262 0.4122,0.900723 0.51177,1.37379 m 10.9769,1.48154 -0.0135,0.02694 0.0135,-0.02694 m 0.0134,0.134689 -0.0406,0.04045 0.0406,-0.04045 m 0,0.242435 -0.0406,0.04044 0.0406,-0.04044 m 0.48488,0.565678 -0.0406,0.04045 0.0406,-0.04045 m 0.1212,0.175091 c 0.0312,0 0.007,0.02011 -0.0135,0.01346 l 0.0135,-0.01346 m -0.28281,0.309775 -0.0407,0.04045 0.0407,-0.04045 m -14.02086,1.663375 c 1.36846,-0.209068 2.83693,0.928694 3.38733,2.094359 0.29515,0.62489 0.37554,1.313515 0.50512,1.979881 0.0854,0.439555 0.14528,0.888246 0.18857,1.333385 0.0129,0.133647 0.0928,0.313494 0.0203,0.444464 -0.07,0.126212 -0.26421,0.18935 -0.38385,0.249168 -0.40905,0.204564 -0.86969,0.392656 -1.33337,0.437728 -1.64272,0.159713 -3.23265,-0.357653 -4.22911,-1.737451 -0.85328,-1.181424 -0.911,-3.132686 0.22894,-4.161785 0.45027,-0.406477 1.03676,-0.551228 1.6162,-0.639749 m 9.41456,4.76114 h -0.0406 c -0.22818,-1.238952 -1.20369,-1.872675 -2.18189,-2.464752 l 0.44448,-2.101094 c 0.97465,0.07693 1.69266,1.16134 2.03374,1.979881 0.0913,0.219328 0.35208,0.640954 0.26262,0.888923 -0.10988,0.304787 -0.63161,-0.25324 -0.70037,0.08083 -0.0307,0.150752 0.0915,0.37937 0.12798,0.525272 0.084,0.336199 0.15187,0.752243 0.0538,1.09096 m 5.0507,-4.323416 0.16162,0.404058 h 0.0407 l -0.20207,-0.404061 m 0.20206,0.444462 0.0406,0.04044 -0.0406,-0.04044 m 0.0406,0.08082 0.0809,0.28284 h 0.0406 l -0.12105,-0.282846 m -8.2025,5.697199 h -1.17177 c 0,-1.019941 -0.39295,-2.148593 -0.71382,-3.111234 -0.0705,-0.210849 -0.45336,-0.934558 -0.31651,-1.124627 0.0638,-0.08795 0.25818,-0.04982 0.3434,-0.02019 0.29736,0.103234 0.48404,0.485273 0.63305,0.740771 0.57956,0.99353 1.01696,2.382381 1.22564,3.515285 m -0.24252,-3.62977 c 0.97591,-0.149096 1.73775,0.842718 2.00681,1.649898 0.12149,0.364545 0.39318,1.1113 -0.14814,1.239111 -0.43453,0.102595 -1.50854,-0.256463 -1.75766,-0.633028 -0.15088,-0.22807 -0.20847,-0.626986 -0.30312,-0.888921 -0.0834,-0.230874 -0.50776,-0.952138 -0.38378,-1.171767 0.0877,-0.155124 0.4308,-0.171597 0.58589,-0.195293 z"
             id="path1" />
        </g>
      </g>
      <g
         id="g2"
         transform="translate(2.1166667,-1.2859782)">
        <path
           style="-inkscape-font-specification:'Roboto Bold';opacity:0.67;stroke-width:0.3;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:5.3;paint-order:fill markers stroke"
           d="m 76.945222,52.941562 v 1.77078 H 75.908248 V 49.69628 h 1.96026 q 0.888835,0 1.384929,0.468533 0.49954,0.468533 0.49954,1.188559 0,0.726915 -0.49954,1.157553 -0.496094,0.430637 -1.384929,0.430637 z m 0,-2.408123 v 1.574409 h 0.923286 q 0.444418,0 0.640788,-0.210151 0.196371,-0.210151 0.196371,-0.537435 0,-0.327284 -0.196371,-0.575331 -0.19637,-0.251492 -0.640788,-0.251492 z m 5.057403,1.188558 q -0.434082,0 -0.630453,0.334175 v 2.65617 h -0.995633 v -5.29167 h 0.995633 v 1.967151 q 0.389296,-0.471979 0.995634,-0.471979 0.54777,0 0.88539,0.32384 0.341064,0.323839 0.34451,1.105876 v 2.366782 h -0.999079 v -2.356447 q 0,-0.361735 -0.155029,-0.496094 -0.15503,-0.137804 -0.440973,-0.137804 z m 2.191082,1.092096 q 0,-0.813043 0.461644,-1.353923 0.461643,-0.544326 1.302247,-0.544326 0.850939,0 1.309137,0.544326 0.458198,0.54088 0.458198,1.353923 v 0.07235 q 0,0.813043 -0.458198,1.353924 -0.458198,0.54088 -1.302247,0.54088 -0.837159,0 -1.298802,-0.5271 -0.458198,-0.5271 -0.471979,-1.322917 z m 0.999079,0.07235 q 0,0.454753 0.172255,0.775147 0.1757,0.316949 0.599447,0.316949 0.416857,0 0.589111,-0.316949 0.1757,-0.316949 0.1757,-0.847494 0,-0.444417 -0.1757,-0.768257 -0.172254,-0.327284 -0.596001,-0.327284 -0.420302,0 -0.592557,0.323839 -0.172255,0.32384 -0.172255,0.844049 z m 5.012617,1.801786 q -0.279053,0.09302 -0.599447,0.09302 -0.489204,0 -0.778592,-0.254937 -0.289389,-0.254937 -0.289389,-0.847494 v -1.967151 h -0.54777 v -0.726916 h 0.54777 V 50.06491 h 0.995634 v 0.919841 h 0.633898 v 0.726916 h -0.633898 v 1.863798 q 0,0.234266 0.09646,0.310059 0.09646,0.07579 0.285943,0.07579 0.151585,0 0.289389,-0.02756 z m 0.258382,-1.874133 q 0,-0.813043 0.461643,-1.353923 0.461643,-0.544326 1.302247,-0.544326 0.850939,0 1.309137,0.544326 0.458198,0.54088 0.458198,1.353923 v 0.07235 q 0,0.813043 -0.458198,1.353924 -0.458198,0.54088 -1.302247,0.54088 -0.837158,0 -1.298801,-0.5271 -0.458198,-0.5271 -0.471979,-1.322917 z m 0.999079,0.07235 q 0,0.454753 0.172254,0.775147 0.1757,0.316949 0.599447,0.316949 0.416857,0 0.589112,-0.316949 0.1757,-0.316949 0.1757,-0.847494 0,-0.444417 -0.1757,-0.768257 -0.172255,-0.327284 -0.596002,-0.327284 -0.420302,0 -0.592557,0.323839 -0.172254,0.32384 -0.172254,0.844049 z m 7.183029,-0.809598 v 2.001602 q -0.179145,0.213596 -0.637343,0.458198 -0.454753,0.244602 -1.281577,0.244602 -0.974962,0 -1.577854,-0.630453 -0.599447,-0.633898 -0.599447,-1.794896 v -0.299723 q 0,-1.160998 0.575331,-1.794896 0.575331,-0.637343 1.529623,-0.637343 0.974963,0 1.440051,0.468533 0.465088,0.468533 0.547771,1.198894 h -1.005969 q -0.05857,-0.378961 -0.272162,-0.606337 -0.213597,-0.227377 -0.68213,-0.227377 -1.016304,0 -1.078315,1.4056 l -0.0034,0.492649 q 0,0.792373 0.292834,1.192004 0.296278,0.399631 0.888835,0.399631 0.372071,0 0.558106,-0.08268 0.186035,-0.08613 0.268717,-0.165365 V 52.834772 H 96.671898 V 52.07685 Z m 1.822457,-2.65617 v 5.29167 h -0.99908 v -5.29167 z m 0.8096,0.599447 q 0,-0.223931 0.15158,-0.368625 0.15159,-0.14814 0.40652,-0.14814 0.25494,0 0.40653,0.14814 0.15158,0.144694 0.15158,0.368625 0,0.220486 -0.15158,0.368625 -0.15159,0.144695 -0.40653,0.144695 -0.25493,0 -0.40652,-0.144695 -0.15158,-0.148139 -0.15158,-0.368625 z m 1.06109,0.964627 v 3.727596 h -0.99908 v -3.727596 z m 2.42535,0.737251 q -0.41341,0 -0.60979,0.3514 v 2.638945 h -0.99907 v -3.727596 h 0.93706 l 0.0344,0.409967 q 0.3893,-0.478869 1.06798,-0.478869 0.72003,0 0.98875,0.568442 0.3824,-0.568442 1.11965,-0.568442 0.53744,0 0.86472,0.316949 0.32729,0.316949 0.33073,1.088651 v 2.390898 h -0.99908 v -2.377117 q 0,-0.372071 -0.15158,-0.492649 -0.14814,-0.120579 -0.40652,-0.120579 -0.44097,0 -0.61667,0.416857 v 2.573488 h -0.99564 v -2.370227 q 0,-0.368626 -0.15158,-0.492649 -0.15159,-0.127469 -0.41341,-0.127469 z m 6.10815,0 q -0.41341,0 -0.60978,0.3514 v 2.638945 h -0.99908 v -3.727596 h 0.93707 l 0.0344,0.409967 q 0.3893,-0.478869 1.06798,-0.478869 0.72003,0 0.98874,0.568442 0.38241,-0.568442 1.11966,-0.568442 0.53744,0 0.86472,0.316949 0.32728,0.316949 0.33073,1.088651 v 2.390898 h -0.99908 v -2.377117 q 0,-0.372071 -0.15158,-0.492649 -0.14809,-0.120585 -0.40648,-0.120585 -0.44097,0 -0.61667,0.416857 v 2.573488 h -0.99563 v -2.370227 q 0,-0.368626 -0.15159,-0.492649 -0.15158,-0.127469 -0.41341,-0.127469 z m 7.67224,2.384008 q -0.17915,0.254937 -0.54433,0.465088 -0.36518,0.210151 -0.9095,0.210151 -0.86817,0 -1.35737,-0.523655 -0.4892,-0.5271 -0.49265,-1.271241 V 52.84166 q 0,-0.844049 0.46853,-1.384929 0.47198,-0.540881 1.27125,-0.540881 0.8027,0 1.223,0.502985 0.42031,0.502984 0.42031,1.329807 v 0.423747 h -2.37368 q 0.0517,0.361736 0.28595,0.585667 0.23426,0.220486 0.61667,0.220486 0.56844,0 0.89917,-0.416857 z m -1.57097,-2.387453 q -0.31694,0 -0.4892,0.213596 -0.17225,0.213596 -0.22393,0.558106 h 1.38493 v -0.07579 q -0.007,-0.299724 -0.16881,-0.496094 -0.15848,-0.199816 -0.50299,-0.199816 z m 3.94808,0.16881 q -0.56155,0 -0.73725,0.382406 v 2.442574 h -0.99907 v -3.727596 h 0.94051 l 0.031,0.444418 q 0.29284,-0.51332 0.83027,-0.51332 0.18948,0 0.30661,0.04479 l -0.0103,0.954292 z"
           id="text1-0"
           aria-label="PhotoGlimmer" />
        <path
           style="-inkscape-font-specification:'Roboto Bold';fill:#ffffff;stroke-width:0.3;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:5.3;paint-order:fill markers stroke"
           d="m 76.481256,52.536601 v 1.77078 h -1.036975 v -5.016062 h 1.960261 q 0.888835,0 1.384929,0.468533 0.499539,0.468534 0.499539,1.188559 0,0.726916 -0.499539,1.157553 -0.496094,0.430637 -1.384929,0.430637 z m 0,-2.408123 v 1.57441 h 0.923286 q 0.444417,0 0.640788,-0.210151 0.196371,-0.210151 0.196371,-0.537436 0,-0.327284 -0.196371,-0.575331 -0.196371,-0.251492 -0.640788,-0.251492 z m 5.057403,1.188559 q -0.434082,0 -0.630453,0.334174 v 2.65617 h -0.995633 v -5.29167 h 0.995633 v 1.967151 q 0.389296,-0.471978 0.995633,-0.471978 0.547771,0 0.88539,0.323839 0.341065,0.323839 0.34451,1.105876 v 2.366782 h -0.999078 v -2.356446 q 0,-0.361736 -0.15503,-0.496094 -0.155029,-0.137804 -0.440972,-0.137804 z m 2.191082,1.092096 q 0,-0.813043 0.461643,-1.353924 0.461643,-0.544325 1.302247,-0.544325 0.850939,0 1.309137,0.544325 0.458198,0.540881 0.458198,1.353924 v 0.07235 q 0,0.813043 -0.458198,1.353923 -0.458198,0.54088 -1.302247,0.54088 -0.837158,0 -1.298801,-0.5271 -0.458198,-0.5271 -0.471979,-1.322917 z m 0.999078,0.07235 q 0,0.454753 0.172255,0.775147 0.1757,0.316949 0.599447,0.316949 0.416857,0 0.589112,-0.316949 0.1757,-0.316949 0.1757,-0.847494 0,-0.444418 -0.1757,-0.768257 -0.172255,-0.327284 -0.596002,-0.327284 -0.420302,0 -0.592557,0.323839 -0.172255,0.323839 -0.172255,0.844049 z m 5.012617,1.801786 q -0.279053,0.09302 -0.599447,0.09302 -0.489204,0 -0.778592,-0.254937 -0.289388,-0.254937 -0.289388,-0.847494 v -1.967151 h -0.547771 v -0.726915 h 0.547771 v -0.919841 h 0.995633 v 0.919841 h 0.633898 v 0.726915 h -0.633898 v 1.863798 q 0,0.234267 0.09646,0.310059 0.09646,0.07579 0.285943,0.07579 0.151584,0 0.289388,-0.02756 z m 0.258383,-1.874133 q 0,-0.813043 0.461643,-1.353924 0.461643,-0.544325 1.302247,-0.544325 0.850939,0 1.309137,0.544325 0.458198,0.540881 0.458198,1.353924 v 0.07235 q 0,0.813043 -0.458198,1.353923 -0.458198,0.54088 -1.302247,0.54088 -0.837159,0 -1.298802,-0.5271 -0.458198,-0.5271 -0.471978,-1.322917 z m 0.999078,0.07235 q 0,0.454753 0.172255,0.775147 0.1757,0.316949 0.599447,0.316949 0.416857,0 0.589112,-0.316949 0.1757,-0.316949 0.1757,-0.847494 0,-0.444418 -0.1757,-0.768257 -0.172255,-0.327284 -0.596002,-0.327284 -0.420302,0 -0.592557,0.323839 -0.172255,0.323839 -0.172255,0.844049 z m 7.183029,-0.809598 v 2.001601 q -0.179145,0.213597 -0.637343,0.458198 -0.454752,0.244602 -1.281576,0.244602 -0.974963,0 -1.577855,-0.630453 -0.599447,-0.633897 -0.599447,-1.794895 v -0.299724 q 0,-1.160998 0.575332,-1.794896 0.575331,-0.637343 1.529623,-0.637343 0.974963,0 1.440051,0.468533 0.465088,0.468534 0.54777,1.198894 h -1.005968 q -0.05857,-0.37896 -0.272163,-0.606337 -0.213596,-0.227376 -0.682129,-0.227376 -1.016304,0 -1.078316,1.4056 l -0.0034,0.492649 q 0,0.792372 0.292833,1.192003 0.296279,0.399632 0.888836,0.399632 0.37207,0 0.558105,-0.08268 0.186036,-0.08613 0.268718,-0.165364 v -0.86472 h -0.937066 v -0.757921 z m 1.822454,-2.656171 v 5.29167 h -0.999076 v -5.29167 z m 0.8096,0.599447 q 0,-0.223931 0.15159,-0.368625 0.15158,-0.148139 0.40652,-0.148139 0.25494,0 0.40652,0.148139 0.15158,0.144694 0.15158,0.368625 0,0.220487 -0.15158,0.368626 -0.15158,0.144694 -0.40652,0.144694 -0.25494,0 -0.40652,-0.144694 -0.15159,-0.148139 -0.15159,-0.368626 z m 1.06109,0.964628 v 3.727595 h -0.99908 v -3.727595 z m 2.42535,0.737251 q -0.41341,0 -0.60978,0.3514 v 2.638944 h -0.99908 v -3.727595 h 0.93707 l 0.0344,0.409966 q 0.38929,-0.478868 1.06798,-0.478868 0.72002,0 0.98874,0.568441 0.38241,-0.568441 1.11966,-0.568441 0.53743,0 0.86472,0.316949 0.32728,0.316949 0.33073,1.088651 v 2.390897 h -0.99908 V 51.93027 q 0,-0.372071 -0.15159,-0.492649 -0.14814,-0.120578 -0.40652,-0.120578 -0.44097,0 -0.61667,0.416856 v 2.573488 h -0.99563 V 51.93716 q 0,-0.368625 -0.15159,-0.492649 -0.15158,-0.127468 -0.41341,-0.127468 z m 6.10816,0 q -0.41341,0 -0.60979,0.3514 v 2.638944 h -0.99907 v -3.727595 h 0.93706 l 0.0345,0.409966 q 0.3893,-0.478868 1.06798,-0.478868 0.72003,0 0.98875,0.568441 0.3824,-0.568441 1.11965,-0.568441 0.53744,0 0.86472,0.316949 0.32729,0.316949 0.33073,1.088651 v 2.390897 h -0.99908 V 51.93027 q 0,-0.372071 -0.15158,-0.492649 -0.14814,-0.120578 -0.40652,-0.120578 -0.44097,0 -0.61667,0.416856 v 2.573488 h -0.99564 V 51.93716 q 0,-0.368625 -0.15158,-0.492649 -0.15159,-0.127468 -0.41341,-0.127468 z m 7.67223,2.384007 q -0.17914,0.254937 -0.54432,0.465088 -0.36518,0.210151 -0.90951,0.210151 -0.86816,0 -1.35737,-0.523654 -0.4892,-0.5271 -0.49265,-1.271242 v -0.144694 q 0,-0.844049 0.46854,-1.384929 0.47198,-0.54088 1.27124,-0.54088 0.80271,0 1.22301,0.502984 0.4203,0.502984 0.4203,1.329808 v 0.423747 h -2.37367 q 0.0517,0.361735 0.28594,0.585666 0.23427,0.220487 0.61667,0.220487 0.56844,0 0.89917,-0.416857 z m -1.57096,-2.387452 q -0.31695,0 -0.48921,0.213596 -0.17225,0.213596 -0.22393,0.558105 h 1.38493 v -0.07579 q -0.007,-0.299723 -0.16881,-0.496094 -0.15847,-0.199815 -0.50298,-0.199815 z m 3.94808,0.168809 q -0.56155,0 -0.73725,0.382406 v 2.442574 h -0.99908 v -3.727595 h 0.94051 l 0.031,0.444417 q 0.29283,-0.513319 0.83026,-0.513319 0.18949,0 0.30662,0.04479 l -0.0103,0.954292 z"
           id="text1"
           aria-label="PhotoGlimmer" />
      </g>
    </g>
    <script
       id="mesh_polyfill"
       type="text/javascript">&#10;!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();&#10;</script>
  </g>
  <script
     id="script1169"
     type="text/javascript">&#10;!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();&#10;</script>
</svg>
